{"remainingRequest":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\babel-loader\\lib\\index.js!E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\src\\utils\\socket_service.js","dependencies":[{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\src\\utils\\socket_service.js","mtime":1602319181000},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJFOi9XZWJzdG9ybV9wcm9ncmFtL0VjaGFydHMtVnVlL0RheTAzL0VjaGFydHMtVnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiRTovV2Vic3Rvcm1fcHJvZ3JhbS9FY2hhcnRzLVZ1ZS9EYXkwMy9FY2hhcnRzLVZ1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIkU6L1dlYnN0b3JtX3Byb2dyYW0vRWNoYXJ0cy1WdWUvRGF5MDMvRWNoYXJ0cy1WdWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKCnZhciBTb2NrZXRTZXJ2aWNlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBTb2NrZXRTZXJ2aWNlKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNvY2tldFNlcnZpY2UpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAid3MiLCBudWxsKTsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgImNhbGxCYWNrTWFwcGluZyIsIHt9KTsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgImNvbm5lY3RlZCIsIGZhbHNlKTsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgInNlbmRSZXRyeUNvdW50IiwgMCk7CgogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJjb25uZWN0UmV0cnlDb3VudCIsIDApOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFNvY2tldFNlcnZpY2UsIFt7CiAgICBrZXk6ICJjb25uZWN0IiwKICAgIHZhbHVlOiAvLyAg5a6a5LmJ6L+e5o6l5pyN5Yqh5Zmo55qE5pa55rOVCiAgICBmdW5jdGlvbiBjb25uZWN0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgLy8g6L+e5o6l5pyN5Yqh5ZmoCiAgICAgIGlmICghd2luZG93LldlYlNvY2tldCkgewogICAgICAgIHJldHVybiBjb25zb2xlLmxvZygn5oKo55qE5rWP6KeI5Zmo5LiN5pSv5oyBV2ViU29ja2V0Jyk7CiAgICAgIH0KCiAgICAgIHRoaXMud3MgPSBuZXcgV2ViU29ja2V0KCd3czovL2xvY2FsaG9zdDo5OTk4Jyk7IC8vIOi/nuaOpeaIkOWKn+eahOS6i+S7tgoKICAgICAgdGhpcy53cy5vbm9wZW4gPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgY29uc29sZS5sb2coJ+i/nuaOpeacjeWKoeerr+aIkOWKn+S6hicpOwogICAgICAgIF90aGlzLmNvbm5lY3RlZCA9IHRydWU7IC8vIOmHjee9rumHjeaWsOi/nuaOpeeahOasoeaVsAoKICAgICAgICBfdGhpcy5jb25uZWN0UmV0cnlDb3VudCA9IDA7CiAgICAgIH07IC8vIDEu6L+e5o6l5pyN5Yqh56uv5aSx6LSlCiAgICAgIC8vIDIu5b2T6L+e5o6l5oiQ5Yqf5LmL5ZCOLCDmnI3liqHlmajlhbPpl63nmoTmg4XlhrUKCgogICAgICB0aGlzLndzLm9uY2xvc2UgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgY29uc29sZS5sb2coJ+i/nuaOpeacjeWKoeerr+Wksei0pScpOwogICAgICAgIF90aGlzLmNvbm5lY3RlZCA9IGZhbHNlOwogICAgICAgIF90aGlzLmNvbm5lY3RSZXRyeUNvdW50Kys7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICBfdGhpcy5jb25uZWN0KCk7CiAgICAgICAgfSwgNTAwICogX3RoaXMuY29ubmVjdFJldHJ5Q291bnQpOwogICAgICB9OyAvLyDlvpfliLDmnI3liqHnq6/lj5HpgIHov4fmnaXnmoTmlbDmja4KCgogICAgICB0aGlzLndzLm9ubWVzc2FnZSA9IGZ1bmN0aW9uIChtc2cpIHsKICAgICAgICBjb25zb2xlLmxvZygn5LuO5pyN5Yqh56uv6I635Y+W5Yiw5LqG5pWw5o2uJyk7IC8vIOecn+ato+acjeWKoeerr+WPkemAgei/h+adpeeahOWOn+Wni+aVsOaNruaXtuWcqG1zZ+S4reeahGRhdGHlrZfmrrUKICAgICAgICAvLyBjb25zb2xlLmxvZyhtc2cuZGF0YSkKCiAgICAgICAgdmFyIHJlY3ZEYXRhID0gSlNPTi5wYXJzZShtc2cuZGF0YSk7CiAgICAgICAgdmFyIHNvY2tldFR5cGUgPSByZWN2RGF0YS5zb2NrZXRUeXBlOyAvLyDliKTmlq3lm57osIPlh73mlbDmmK/lkKblrZjlnKgKCiAgICAgICAgaWYgKF90aGlzLmNhbGxCYWNrTWFwcGluZ1tzb2NrZXRUeXBlXSkgewogICAgICAgICAgdmFyIGFjdGlvbiA9IHJlY3ZEYXRhLmFjdGlvbjsKCiAgICAgICAgICBpZiAoYWN0aW9uID09PSAnZ2V0RGF0YScpIHsKICAgICAgICAgICAgdmFyIHJlYWxEYXRhID0gSlNPTi5wYXJzZShyZWN2RGF0YS5kYXRhKTsKCiAgICAgICAgICAgIF90aGlzLmNhbGxCYWNrTWFwcGluZ1tzb2NrZXRUeXBlXS5jYWxsKF90aGlzLCByZWFsRGF0YSk7CiAgICAgICAgICB9IGVsc2UgaWYgKGFjdGlvbiA9PT0gJ2Z1bGxTY3JlZW4nKSB7CiAgICAgICAgICAgIF90aGlzLmNhbGxCYWNrTWFwcGluZ1tzb2NrZXRUeXBlXS5jYWxsKF90aGlzLCByZWN2RGF0YSk7CiAgICAgICAgICB9IGVsc2UgaWYgKGFjdGlvbiA9PT0gJ3RoZW1lQ2hhbmdlJykgewogICAgICAgICAgICBfdGhpcy5jYWxsQmFja01hcHBpbmdbc29ja2V0VHlwZV0uY2FsbChfdGhpcywgcmVjdkRhdGEpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfTsKICAgIH0gLy8g5Zue6LCD5Ye95pWw55qE5rOo5YaMCgogIH0sIHsKICAgIGtleTogInJlZ2lzdGVyQ2FsbEJhY2siLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlZ2lzdGVyQ2FsbEJhY2soc29ja2V0VHlwZSwgY2FsbEJhY2spIHsKICAgICAgdGhpcy5jYWxsQmFja01hcHBpbmdbc29ja2V0VHlwZV0gPSBjYWxsQmFjazsKICAgIH0gLy8g5Y+W5raI5p+Q5LiA5Liq5Zue6LCD5Ye95pWwCgogIH0sIHsKICAgIGtleTogInVuUmVnaXN0ZXJDYWxsQmFjayIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdW5SZWdpc3RlckNhbGxCYWNrKHNvY2tldFR5cGUpIHsKICAgICAgdGhpcy5jYWxsQmFja01hcHBpbmdbc29ja2V0VHlwZV0gPSBudWxsOwogICAgfSAvLyDlj5HpgIHmlbDmja7nmoTmlrnms5UKCiAgfSwgewogICAga2V5OiAic2VuZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2VuZChkYXRhKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgLy8g5Yik5pat5q2k5pe25q2k5Yi75pyJ5rKh5pyJ6L+e5o6l5oiQ5YqfCiAgICAgIGlmICh0aGlzLmNvbm5lY3RlZCkgewogICAgICAgIHRoaXMuc2VuZFJldHJ5Q291bnQgPSAwOwogICAgICAgIHRoaXMud3Muc2VuZChKU09OLnN0cmluZ2lmeShkYXRhKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5zZW5kUmV0cnlDb3VudCsrOwogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgX3RoaXMyLnNlbmQoZGF0YSk7CiAgICAgICAgfSwgdGhpcy5zZW5kUmV0cnlDb3VudCAqIDUwMCk7CiAgICAgIH0KICAgIH0KICB9XSwgW3sKICAgIGtleTogIkluc3RhbmNlIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICBpZiAoIXRoaXMuaW5zdGFuY2UpIHsKICAgICAgICB0aGlzLmluc3RhbmNlID0gbmV3IFNvY2tldFNlcnZpY2UoKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXMuaW5zdGFuY2U7CiAgICB9IC8vIOWSjOacjeWKoeerr+i/nuaOpeeahHNvY2tldOWvueixoQoKICB9XSk7CgogIHJldHVybiBTb2NrZXRTZXJ2aWNlOwp9KCk7CgpfZGVmaW5lUHJvcGVydHkoU29ja2V0U2VydmljZSwgImluc3RhbmNlIiwgbnVsbCk7CgpleHBvcnQgeyBTb2NrZXRTZXJ2aWNlIGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["E:/Webstorm_program/Echarts-Vue/Day03/Echarts-Vue/src/utils/socket_service.js"],"names":["SocketService","window","WebSocket","console","log","ws","onopen","connected","connectRetryCount","onclose","setTimeout","connect","onmessage","msg","recvData","JSON","parse","data","socketType","callBackMapping","action","realData","call","callBack","sendRetryCount","send","stringify","instance"],"mappings":"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","sourcesContent":["export default class SocketService {\n  /**\n   * 单例\n   */\n  static instance = null\n  static get Instance() {\n    if (!this.instance) {\n      this.instance = new SocketService()\n    }\n    return this.instance\n  }\n\n  // 和服务端连接的socket对象\n  ws = null\n\n  // 存储回调函数\n  callBackMapping = {}\n\n  // 标识是否连接成功\n  connected = false\n\n  // 记录重试的次数\n  sendRetryCount = 0\n\n  // 重新连接尝试的次数\n  connectRetryCount = 0\n\n  //  定义连接服务器的方法\n  connect() {\n    // 连接服务器\n    if (!window.WebSocket) {\n      return console.log('您的浏览器不支持WebSocket')\n    }\n    this.ws = new WebSocket('ws://localhost:9998')\n\n    // 连接成功的事件\n    this.ws.onopen = () => {\n      console.log('连接服务端成功了')\n      this.connected = true\n      // 重置重新连接的次数\n      this.connectRetryCount = 0\n    }\n    // 1.连接服务端失败\n    // 2.当连接成功之后, 服务器关闭的情况\n    this.ws.onclose = () => {\n      console.log('连接服务端失败')\n      this.connected = false\n      this.connectRetryCount++\n      setTimeout(() => {\n        this.connect()\n      }, 500 * this.connectRetryCount)\n    }\n    // 得到服务端发送过来的数据\n    this.ws.onmessage = msg => {\n      console.log('从服务端获取到了数据')\n      // 真正服务端发送过来的原始数据时在msg中的data字段\n      // console.log(msg.data)\n      const recvData = JSON.parse(msg.data)\n      const socketType = recvData.socketType\n      // 判断回调函数是否存在\n      if (this.callBackMapping[socketType]) {\n        const action = recvData.action\n        if (action === 'getData') {\n          const realData = JSON.parse(recvData.data)\n          this.callBackMapping[socketType].call(this, realData)\n        } else if (action === 'fullScreen') {\n          this.callBackMapping[socketType].call(this, recvData)\n        } else if (action === 'themeChange') {\n          this.callBackMapping[socketType].call(this, recvData)\n        }\n      }\n    }\n  }\n\n  // 回调函数的注册\n  registerCallBack (socketType, callBack) {\n    this.callBackMapping[socketType] = callBack\n  }\n\n  // 取消某一个回调函数\n  unRegisterCallBack (socketType) {\n    this.callBackMapping[socketType] = null\n  }\n\n  // 发送数据的方法\n  send (data) {\n    // 判断此时此刻有没有连接成功\n    if (this.connected) {\n      this.sendRetryCount = 0\n      this.ws.send(JSON.stringify(data))\n    } else {\n      this.sendRetryCount++\n      setTimeout(() => {\n        this.send(data)\n      }, this.sendRetryCount * 500)\n    }\n  }\n}\n"]}]}