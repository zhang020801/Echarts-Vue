{"remainingRequest":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\babel-loader\\lib\\index.js!E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\src\\components\\Stock.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\src\\components\\Stock.vue","mtime":1614924310777},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRTovV2Vic3Rvcm1fcHJvZ3JhbS9FY2hhcnRzLVZ1ZS9EYXkwMy9FY2hhcnRzLVZ1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2hhcnRJbnN0YW5jZTogbnVsbCwKICAgICAgYWxsRGF0YTogbnVsbCwKICAgICAgY3VycmVudEluZGV4OiAwLAogICAgICAvLyDlvZPliY3mmL7npLrnmoTmlbDmja4KICAgICAgdGltZXJJZDogbnVsbCAvLyDlrprml7blmajnmoTmoIfor4YKCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIC8vIOWcqOe7hOS7tuWIm+W7uuWujOaIkOS5i+WQjiDov5vooYzlm57osIPlh73mlbDnmoTms6jlhowKICAgIHRoaXMuJHNvY2tldC5yZWdpc3RlckNhbGxCYWNrKCdzdG9ja0RhdGEnLCB0aGlzLmdldERhdGEpOwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuaW5pdENoYXJ0KCk7IC8vIHRoaXMuZ2V0RGF0YSgpCgogICAgdGhpcy4kc29ja2V0LnNlbmQoewogICAgICBhY3Rpb246ICdnZXREYXRhJywKICAgICAgc29ja2V0VHlwZTogJ3N0b2NrRGF0YScsCiAgICAgIGNoYXJ0TmFtZTogJ3N0b2NrJywKICAgICAgdmFsdWU6ICcnCiAgICB9KTsKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnNjcmVlbkFkYXB0ZXIpOwogICAgdGhpcy5zY3JlZW5BZGFwdGVyKCk7CiAgfSwKICBkZXN0cm95ZWQ6IGZ1bmN0aW9uIGRlc3Ryb3llZCgpIHsKICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnNjcmVlbkFkYXB0ZXIpOwogICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVySWQpOwogICAgdGhpcy4kc29ja2V0LnVuUmVnaXN0ZXJDYWxsQmFjaygnc3RvY2tEYXRhJyk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0Q2hhcnQ6IGZ1bmN0aW9uIGluaXRDaGFydCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZSA9IHRoaXMuJGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLnN0b2NrX3JlZiwgdGhpcy50aGVtZSk7CiAgICAgIHZhciBpbml0T3B0aW9uID0gewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0OiAn8J+noSDlupPlrZjlkozplIDph4/liIbmnpAnLAogICAgICAgICAgbGVmdDogMjAsCiAgICAgICAgICB0b3A6IDIwCiAgICAgICAgfQogICAgICB9OwogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uuc2V0T3B0aW9uKGluaXRPcHRpb24pOwogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uub24oJ21vdXNlb3ZlcicsIGZ1bmN0aW9uICgpIHsKICAgICAgICBjbGVhckludGVydmFsKF90aGlzLnRpbWVySWQpOwogICAgICB9KTsKICAgICAgdGhpcy5jaGFydEluc3RhbmNlLm9uKCdtb3VzZW91dCcsIGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy5zdGFydEludGVydmFsKCk7CiAgICAgIH0pOwogICAgfSwKICAgIGdldERhdGE6IGZ1bmN0aW9uIGdldERhdGEocmV0KSB7CiAgICAgIC8vIOiOt+WPluacjeWKoeWZqOeahOaVsOaNriwg5a+5dGhpcy5hbGxEYXRh6L+b6KGM6LWL5YC85LmL5ZCOLCDosIPnlKh1cGRhdGVDaGFydOaWueazleabtOaWsOWbvuihqAogICAgICAvLyBjb25zdCB7IGRhdGE6IHJldCB9ID0gYXdhaXQgdGhpcy4kaHR0cC5nZXQoJ3N0b2NrJykKICAgICAgdGhpcy5hbGxEYXRhID0gcmV0OwogICAgICBjb25zb2xlLmxvZyh0aGlzLmFsbERhdGEpOwogICAgICB0aGlzLnVwZGF0ZUNoYXJ0KCk7CiAgICAgIHRoaXMuc3RhcnRJbnRlcnZhbCgpOwogICAgfSwKICAgIHVwZGF0ZUNoYXJ0OiBmdW5jdGlvbiB1cGRhdGVDaGFydCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgY2VudGVyQXJyID0gW1snMTglJywgJzQwJSddLCBbJzUwJScsICc0MCUnXSwgWyc4MiUnLCAnNDAlJ10sIFsnMzQlJywgJzc1JSddLCBbJzY2JScsICc3NSUnXV07CiAgICAgIHZhciBjb2xvckFyciA9IFtbJyM0RkY3NzgnLCAnIzBCQTgyQyddLCBbJyNFNURENDUnLCAnI0U4QjExQyddLCBbJyNFODgyMUMnLCAnI0U1NTQ0NSddLCBbJyM1MDUyRUUnLCAnI0FCNkVFNSddLCBbJyMyM0U1RTUnLCAnIzJFNzJCRiddXTsgLy8g5aSE55CG5Zu+6KGo6ZyA6KaB55qE5pWw5o2uCgogICAgICB2YXIgc3RhcnQgPSB0aGlzLmN1cnJlbnRJbmRleCAqIDU7CiAgICAgIHZhciBlbmQgPSAodGhpcy5jdXJyZW50SW5kZXggKyAxKSAqIDU7CiAgICAgIHZhciBzaG93RGF0YSA9IHRoaXMuYWxsRGF0YS5zbGljZShzdGFydCwgZW5kKTsKICAgICAgdmFyIHNlcmllc0FyciA9IHNob3dEYXRhLm1hcChmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgdHlwZTogJ3BpZScsCiAgICAgICAgICBjZW50ZXI6IGNlbnRlckFycltpbmRleF0sCiAgICAgICAgICBob3ZlckFuaW1hdGlvbjogZmFsc2UsCiAgICAgICAgICAvLyDlhbPpl63pvKDmoIfnp7vlhaXliLDppbzlm77ml7bnmoTliqjnlLvmlYjmnpwKICAgICAgICAgIGxhYmVsTGluZTogewogICAgICAgICAgICBzaG93OiBmYWxzZSAvLyDpmpDol4/mjIfnpLrnur8KCiAgICAgICAgICB9LAogICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgcG9zaXRpb246ICdjZW50ZXInLAogICAgICAgICAgICBjb2xvcjogY29sb3JBcnJbaW5kZXhdWzBdCiAgICAgICAgICB9LAogICAgICAgICAgZGF0YTogW3sKICAgICAgICAgICAgbmFtZTogaXRlbS5uYW1lICsgJ1xuXG4nICsgaXRlbS5zYWxlcywKICAgICAgICAgICAgdmFsdWU6IGl0ZW0uc2FsZXMsCiAgICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiBuZXcgX3RoaXMyLiRlY2hhcnRzLmdyYXBoaWMuTGluZWFyR3JhZGllbnQoMCwgMSwgMCwgMCwgW3sKICAgICAgICAgICAgICAgIG9mZnNldDogMCwKICAgICAgICAgICAgICAgIGNvbG9yOiBjb2xvckFycltpbmRleF1bMF0KICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICBvZmZzZXQ6IDEsCiAgICAgICAgICAgICAgICBjb2xvcjogY29sb3JBcnJbaW5kZXhdWzFdCiAgICAgICAgICAgICAgfV0pCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sIHsKICAgICAgICAgICAgdmFsdWU6IGl0ZW0uc3RvY2ssCiAgICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnIzMzMzg0MycKICAgICAgICAgICAgfQogICAgICAgICAgfV0KICAgICAgICB9OwogICAgICB9KTsKICAgICAgdmFyIGRhdGFPcHRpb24gPSB7CiAgICAgICAgc2VyaWVzOiBzZXJpZXNBcnIKICAgICAgfTsKICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnNldE9wdGlvbihkYXRhT3B0aW9uKTsKICAgIH0sCiAgICBzY3JlZW5BZGFwdGVyOiBmdW5jdGlvbiBzY3JlZW5BZGFwdGVyKCkgewogICAgICB2YXIgdGl0bGVGb250U2l6ZSA9IHRoaXMuJHJlZnMuc3RvY2tfcmVmLm9mZnNldFdpZHRoIC8gMTAwICogMy42OwogICAgICB2YXIgaW5uZXJSYWRpdXMgPSB0aXRsZUZvbnRTaXplICogMi44OwogICAgICB2YXIgb3V0dGVyUmFkaXVzID0gaW5uZXJSYWRpdXMgKiAxLjEyNTsKICAgICAgdmFyIGFkYXB0ZXJPcHRpb24gPSB7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICBmb250U2l6ZTogdGl0bGVGb250U2l6ZQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgdHlwZTogJ3BpZScsCiAgICAgICAgICByYWRpdXM6IFtvdXR0ZXJSYWRpdXMsIGlubmVyUmFkaXVzXSwKICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgIGZvbnRTaXplOiB0aXRsZUZvbnRTaXplIC8gMgogICAgICAgICAgfQogICAgICAgIH0sIHsKICAgICAgICAgIHR5cGU6ICdwaWUnLAogICAgICAgICAgcmFkaXVzOiBbb3V0dGVyUmFkaXVzLCBpbm5lclJhZGl1c10sCiAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICBmb250U2l6ZTogdGl0bGVGb250U2l6ZSAvIDIKICAgICAgICAgIH0KICAgICAgICB9LCB7CiAgICAgICAgICB0eXBlOiAncGllJywKICAgICAgICAgIHJhZGl1czogW291dHRlclJhZGl1cywgaW5uZXJSYWRpdXNdLAogICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgZm9udFNpemU6IHRpdGxlRm9udFNpemUgLyAyCiAgICAgICAgICB9CiAgICAgICAgfSwgewogICAgICAgICAgdHlwZTogJ3BpZScsCiAgICAgICAgICByYWRpdXM6IFtvdXR0ZXJSYWRpdXMsIGlubmVyUmFkaXVzXSwKICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgIGZvbnRTaXplOiB0aXRsZUZvbnRTaXplIC8gMgogICAgICAgICAgfQogICAgICAgIH0sIHsKICAgICAgICAgIHR5cGU6ICdwaWUnLAogICAgICAgICAgcmFkaXVzOiBbb3V0dGVyUmFkaXVzLCBpbm5lclJhZGl1c10sCiAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICBmb250U2l6ZTogdGl0bGVGb250U2l6ZSAvIDIKICAgICAgICAgIH0KICAgICAgICB9XQogICAgICB9OwogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uuc2V0T3B0aW9uKGFkYXB0ZXJPcHRpb24pOwogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2UucmVzaXplKCk7CiAgICB9LAogICAgc3RhcnRJbnRlcnZhbDogZnVuY3Rpb24gc3RhcnRJbnRlcnZhbCgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICBpZiAodGhpcy50aW1lcklkKSB7CiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVySWQpOwogICAgICB9CgogICAgICB0aGlzLnRpbWVySWQgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMzLmN1cnJlbnRJbmRleCsrOwoKICAgICAgICBpZiAoX3RoaXMzLmN1cnJlbnRJbmRleCA+IDEpIHsKICAgICAgICAgIF90aGlzMy5jdXJyZW50SW5kZXggPSAwOwogICAgICAgIH0KCiAgICAgICAgX3RoaXMzLnVwZGF0ZUNoYXJ0KCk7IC8vIOWcqOabtOaUueWujGN1cnJlbnRJbmRleOS5i+WQjiAsIOmcgOimgeabtOaWsOeVjOmdogoKICAgICAgfSwgNTAwMCk7CiAgICB9CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoWyd0aGVtZSddKSksCiAgd2F0Y2g6IHsKICAgIHRoZW1lOiBmdW5jdGlvbiB0aGVtZSgpIHsKICAgICAgY29uc29sZS5sb2coJ+S4u+mimOWIh+aNouS6hicpOwogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2UuZGlzcG9zZSgpOyAvLyDplIDmr4HlvZPliY3nmoTlm77ooagKCiAgICAgIHRoaXMuaW5pdENoYXJ0KCk7IC8vIOmHjeaWsOS7peacgOaWsOeahOS4u+mimOWQjeensOWIneWni+WMluWbvuihqOWvueixoQoKICAgICAgdGhpcy5zY3JlZW5BZGFwdGVyKCk7IC8vIOWujOaIkOWxj+W5leeahOmAgumFjQoKICAgICAgdGhpcy51cGRhdGVDaGFydCgpOyAvLyDmm7TmlrDlm77ooajnmoTlsZXnpLoKICAgIH0KICB9Cn07"},{"version":3,"sources":["Stock.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- 库存销量分析 -->\n<template>\n  <div class='com-container'>\n    <div class='com-chart' ref='stock_ref'></div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nexport default {\n  data () {\n    return {\n      chartInstance: null,\n      allData: null,\n      currentIndex: 0, // 当前显示的数据\n      timerId: null // 定时器的标识\n    }\n  },\n  created () {\n    // 在组件创建完成之后 进行回调函数的注册\n    this.$socket.registerCallBack('stockData', this.getData)\n  },\n  mounted () {\n    this.initChart()\n    // this.getData()\n    this.$socket.send({\n      action: 'getData',\n      socketType: 'stockData',\n      chartName: 'stock',\n      value: ''\n    })\n    window.addEventListener('resize', this.screenAdapter)\n    this.screenAdapter()\n  },\n  destroyed () {\n    window.removeEventListener('resize', this.screenAdapter)\n    clearInterval(this.timerId)\n    this.$socket.unRegisterCallBack('stockData')\n  },\n  methods: {\n    initChart () {\n      this.chartInstance = this.$echarts.init(this.$refs.stock_ref, this.theme)\n      const initOption = {\n        title: {\n          text: '🧡 库存和销量分析',\n          left: 20,\n          top: 20\n        }\n      }\n      this.chartInstance.setOption(initOption)\n      this.chartInstance.on('mouseover', () => {\n        clearInterval(this.timerId)\n      })\n      this.chartInstance.on('mouseout', () => {\n        this.startInterval()\n      })\n    },\n    getData (ret) {\n      // 获取服务器的数据, 对this.allData进行赋值之后, 调用updateChart方法更新图表\n      // const { data: ret } = await this.$http.get('stock')\n      this.allData = ret\n      console.log(this.allData)\n      this.updateChart()\n      this.startInterval()\n    },\n    updateChart () {\n      const centerArr = [\n        ['18%', '40%'],\n        ['50%', '40%'],\n        ['82%', '40%'],\n        ['34%', '75%'],\n        ['66%', '75%']\n      ]\n      const colorArr = [\n        ['#4FF778', '#0BA82C'],\n        ['#E5DD45', '#E8B11C'],\n        ['#E8821C', '#E55445'],\n        ['#5052EE', '#AB6EE5'],\n        ['#23E5E5', '#2E72BF']\n      ]\n      // 处理图表需要的数据\n      const start = this.currentIndex * 5\n      const end = (this.currentIndex + 1) * 5\n      const showData = this.allData.slice(start, end)\n      const seriesArr = showData.map((item, index) => {\n        return {\n          type: 'pie',\n          center: centerArr[index],\n          hoverAnimation: false, // 关闭鼠标移入到饼图时的动画效果\n          labelLine: {\n            show: false // 隐藏指示线\n          },\n          label: {\n            position: 'center',\n            color: colorArr[index][0]\n          },\n          data: [\n            {\n              name: item.name + '\\n\\n' + item.sales,\n              value: item.sales,\n              itemStyle: {\n                color: new this.$echarts.graphic.LinearGradient(0, 1, 0, 0, [\n                  {\n                    offset: 0,\n                    color: colorArr[index][0]\n                  },\n                  {\n                    offset: 1,\n                    color: colorArr[index][1]\n                  }\n                ])\n              }\n            },\n            {\n              value: item.stock,\n              itemStyle: {\n                color: '#333843'\n              }\n            }\n          ]\n        }\n      })\n      const dataOption = {\n        series: seriesArr\n      }\n      this.chartInstance.setOption(dataOption)\n    },\n    screenAdapter () {\n      const titleFontSize = this.$refs.stock_ref.offsetWidth / 100 * 3.6\n      const innerRadius = titleFontSize * 2.8\n      const outterRadius = innerRadius * 1.125\n      const adapterOption = {\n        title: {\n          textStyle: {\n            fontSize: titleFontSize\n          }\n        },\n        series: [\n          {\n            type: 'pie',\n            radius: [outterRadius, innerRadius],\n            label: {\n              fontSize: titleFontSize / 2\n            }\n          },\n          {\n            type: 'pie',\n            radius: [outterRadius, innerRadius],\n            label: {\n              fontSize: titleFontSize / 2\n            }\n          },\n          {\n            type: 'pie',\n            radius: [outterRadius, innerRadius],\n            label: {\n              fontSize: titleFontSize / 2\n            }\n          },\n          {\n            type: 'pie',\n            radius: [outterRadius, innerRadius],\n            label: {\n              fontSize: titleFontSize / 2\n            }\n          },\n          {\n            type: 'pie',\n            radius: [outterRadius, innerRadius],\n            label: {\n              fontSize: titleFontSize / 2\n            }\n          }\n        ]\n      }\n      this.chartInstance.setOption(adapterOption)\n      this.chartInstance.resize()\n    },\n    startInterval () {\n      if (this.timerId) {\n        clearInterval(this.timerId)\n      }\n      this.timerId = setInterval(() => {\n        this.currentIndex++\n        if (this.currentIndex > 1) {\n          this.currentIndex = 0\n        }\n        this.updateChart() // 在更改完currentIndex之后 , 需要更新界面\n      }, 5000)\n    }\n  },\n  computed: {\n    ...mapState(['theme'])\n  },\n  watch: {\n    theme () {\n      console.log('主题切换了')\n      this.chartInstance.dispose() // 销毁当前的图表\n      this.initChart() // 重新以最新的主题名称初始化图表对象\n      this.screenAdapter() // 完成屏幕的适配\n      this.updateChart() // 更新图表的展示\n    }\n  }\n}\n</script>\n\n<style lang='less' scoped>\n</style>\n"],"sourceRoot":"src/components"}]}