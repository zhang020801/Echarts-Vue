{"remainingRequest":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\babel-loader\\lib\\index.js!E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\src\\components\\Hot.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\src\\components\\Hot.vue","mtime":1614874527797},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkU6L1dlYnN0b3JtX3Byb2dyYW0vRWNoYXJ0cy1WdWUvRGF5MDMvRWNoYXJ0cy1WdWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICJFOi9XZWJzdG9ybV9wcm9ncmFtL0VjaGFydHMtVnVlL0RheTAzL0VjaGFydHMtVnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IGdldFByb3ZpbmNlTWFwSW5mbyB9IGZyb20gJ0AvdXRpbHMvbWFwX3V0aWxzJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaGFydEluc3RhbmNlOiBudWxsLAogICAgICBhbGxEYXRhOiBudWxsLAogICAgICBjdXJyZW50SW5kZXg6IDAsCiAgICAgIC8vIOW9k+WJjeaJgOWxleekuuWHuueahOS4gOe6p+WIhuexu+aVsOaNrgogICAgICB0aXRsZUZvbnRTaXplOiAwCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoWyd0aGVtZSddKSksIHt9LCB7CiAgICBjYXROYW1lOiBmdW5jdGlvbiBjYXROYW1lKCkgewogICAgICBpZiAoIXRoaXMuYWxsRGF0YSkgewogICAgICAgIHJldHVybiAnJzsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gdGhpcy5hbGxEYXRhW3RoaXMuY3VycmVudEluZGV4XS5uYW1lOwogICAgICB9CiAgICB9LAogICAgY29tU3R5bGU6IGZ1bmN0aW9uIGNvbVN0eWxlKCkgewogICAgICByZXR1cm4gewogICAgICAgIGZvbnRTaXplOiB0aGlzLnRpdGxlRm9udFNpemUgKyAncHgnCiAgICAgIH07CiAgICB9CiAgfSksCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuaW5pdENoYXJ0KCk7CiAgICB0aGlzLmdldERhdGEoKTsKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnNjcmVlbkFkYXB0ZXIpOwogICAgdGhpcy5zY3JlZW5BZGFwdGVyKCk7CiAgfSwKICBkZXN0cm95ZWQ6IGZ1bmN0aW9uIGRlc3Ryb3llZCgpIHsKICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnNjcmVlbkFkYXB0ZXIpOwogIH0sCiAgbWV0aG9kczogewogICAgaW5pdENoYXJ0OiBmdW5jdGlvbiBpbml0Q2hhcnQoKSB7CiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZSA9IHRoaXMuJGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLmhvdF9yZWYsIHRoaXMudGhlbWUpOwogICAgICB2YXIgaW5pdE9wdGlvbiA9IHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogJ/Cfkpog54Ot6ZSA5ZWG5ZOB55qE5Y2g5q+UJywKICAgICAgICAgIGxlZnQ6IDIwLAogICAgICAgICAgdG9wOiAyMAogICAgICAgIH0sCiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICB0b3A6ICcxNSUnLAogICAgICAgICAgaWNvbjogJ2NpcmNsZScKICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICBmb3JtYXR0ZXI6IGZ1bmN0aW9uIGZvcm1hdHRlcihhcmcpIHsKICAgICAgICAgICAgLy8gY29uc29sZS5sb2coYXJnKQogICAgICAgICAgICB2YXIgdGhpcmRDYXRlZ29yeSA9IGFyZy5kYXRhLmNoaWxkcmVuOyAvLyDorqHnrpflh7rmiYDmnInkuInnuqfliIbnsbvnmoTmlbDlgLzmgLvlkowKCiAgICAgICAgICAgIHZhciB0b3RhbCA9IDA7CiAgICAgICAgICAgIHRoaXJkQ2F0ZWdvcnkuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAgIHRvdGFsICs9IGl0ZW0udmFsdWU7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICB2YXIgcmV0U3RyID0gJyc7CiAgICAgICAgICAgIHRoaXJkQ2F0ZWdvcnkuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAgIHJldFN0ciArPSAiXG4gICAgICAgICAgICAiLmNvbmNhdChpdGVtLm5hbWUsICI6IikuY29uY2F0KHBhcnNlSW50KGl0ZW0udmFsdWUgLyB0b3RhbCAqIDEwMCkgKyAnJScsICJcbiAgICAgICAgICAgIDxici8+XG4gICAgICAgICAgICAiKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHJldHVybiByZXRTdHI7CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICB0eXBlOiAncGllJywKICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICB9LAogICAgICAgICAgZW1waGFzaXM6IHsKICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICBzaG93OiB0cnVlCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxhYmVsTGluZTogewogICAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9XQogICAgICB9OwogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uuc2V0T3B0aW9uKGluaXRPcHRpb24pOwogICAgfSwKICAgIGdldERhdGE6IGZ1bmN0aW9uIGdldERhdGEoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBfeWllbGQkX3RoaXMkJGh0dHAkZ2UsIHJldDsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJGh0dHAuZ2V0KCdob3Rwcm9kdWN0Jyk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIF95aWVsZCRfdGhpcyQkaHR0cCRnZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICByZXQgPSBfeWllbGQkX3RoaXMkJGh0dHAkZ2UuZGF0YTsKICAgICAgICAgICAgICAgIF90aGlzLmFsbERhdGEgPSByZXQ7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfdGhpcy5hbGxEYXRhKTsKCiAgICAgICAgICAgICAgICBfdGhpcy51cGRhdGVDaGFydCgpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgdXBkYXRlQ2hhcnQ6IGZ1bmN0aW9uIHVwZGF0ZUNoYXJ0KCkgewogICAgICAvLyDlpITnkIblm77ooajpnIDopoHnmoTmlbDmja4KICAgICAgdmFyIGxlZ2VuZERhdGEgPSB0aGlzLmFsbERhdGFbdGhpcy5jdXJyZW50SW5kZXhdLmNoaWxkcmVuLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLm5hbWU7CiAgICAgIH0pOwogICAgICB2YXIgc2VyaWVzRGF0YSA9IHRoaXMuYWxsRGF0YVt0aGlzLmN1cnJlbnRJbmRleF0uY2hpbGRyZW4ubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIG5hbWU6IGl0ZW0ubmFtZSwKICAgICAgICAgIHZhbHVlOiBpdGVtLnZhbHVlLAogICAgICAgICAgY2hpbGRyZW46IGl0ZW0uY2hpbGRyZW4gLy8g5paw5aKe5YqgY2hpbGRyZW7nmoTljp/lm6DmmK/kuLrkuoblnKh0b29sdGlw5Lit55qEZm9ybWF0dGVy55qE5Zue6LCD5Ye95pWw5LitLOadpeaLv+WIsOi/meS4quS6jOe6p+WIhuexu+S4i+eahOS4iee6p+WIhuexu+aVsOaNrgoKICAgICAgICB9OwogICAgICB9KTsKICAgICAgdmFyIGRhdGFPcHRpb24gPSB7CiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBkYXRhOiBsZWdlbmREYXRhCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICBkYXRhOiBzZXJpZXNEYXRhCiAgICAgICAgfV0KICAgICAgfTsKICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnNldE9wdGlvbihkYXRhT3B0aW9uKTsKICAgIH0sCiAgICBzY3JlZW5BZGFwdGVyOiBmdW5jdGlvbiBzY3JlZW5BZGFwdGVyKCkgewogICAgICB0aGlzLnRpdGxlRm9udFNpemUgPSB0aGlzLiRyZWZzLmhvdF9yZWYub2Zmc2V0V2lkdGggLyAxMDAgKiAzLjY7CiAgICAgIHZhciBhZGFwdGVyT3B0aW9uID0gewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgZm9udFNpemU6IHRoaXMudGl0bGVGb250U2l6ZQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBpdGVtV2lkdGg6IHRoaXMudGl0bGVGb250U2l6ZSwKICAgICAgICAgIGl0ZW1IZWlnaHQ6IHRoaXMudGl0bGVGb250U2l6ZSwKICAgICAgICAgIGl0ZW1HYXA6IHRoaXMudGl0bGVGb250U2l6ZSAvIDIsCiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgZm9udFNpemU6IHRoaXMudGl0bGVGb250U2l6ZSAvIDIKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIHJhZGl1czogdGhpcy50aXRsZUZvbnRTaXplICogNC41LAogICAgICAgICAgY2VudGVyOiBbJzUwJScsICc2MCUnXQogICAgICAgIH1dCiAgICAgIH07CiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5zZXRPcHRpb24oYWRhcHRlck9wdGlvbik7CiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5yZXNpemUoKTsKICAgIH0sCiAgICB0b0xlZnQ6IGZ1bmN0aW9uIHRvTGVmdCgpIHsKICAgICAgdGhpcy5jdXJyZW50SW5kZXgtLTsKCiAgICAgIGlmICh0aGlzLmN1cnJlbnRJbmRleCA8IDApIHsKICAgICAgICB0aGlzLmN1cnJlbnRJbmRleCA9IHRoaXMuYWxsRGF0YS5sZW5ndGggLSAxOwogICAgICB9CgogICAgICB0aGlzLnVwZGF0ZUNoYXJ0KCk7CiAgICB9LAogICAgdG9SaWdodDogZnVuY3Rpb24gdG9SaWdodCgpIHsKICAgICAgdGhpcy5jdXJyZW50SW5kZXgrKzsKCiAgICAgIGlmICh0aGlzLmN1cnJlbnRJbmRleCA+IHRoaXMuYWxsRGF0YS5sZW5ndGggLSAxKSB7CiAgICAgICAgdGhpcy5jdXJyZW50SW5kZXggPSAwOwogICAgICB9CgogICAgICB0aGlzLnVwZGF0ZUNoYXJ0KCk7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgdGhlbWU6IGZ1bmN0aW9uIHRoZW1lKCkgewogICAgICBjb25zb2xlLmxvZygn5Li76aKY5YiH5o2i5LqGJyk7CiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5kaXNwb3NlKCk7IC8vIOmUgOavgeW9k+WJjeeahOWbvuihqAoKICAgICAgdGhpcy5pbml0Q2hhcnQoKTsgLy8g6YeN5paw5Lul5pyA5paw55qE5Li76aKY5ZCN56ew5Yid5aeL5YyW5Zu+6KGo5a+56LGhCgogICAgICB0aGlzLnNjcmVlbkFkYXB0ZXIoKTsgLy8g5a6M5oiQ5bGP5bmV55qE6YCC6YWNCgogICAgICB0aGlzLnVwZGF0ZUNoYXJ0KCk7IC8vIOabtOaWsOWbvuihqOeahOWxleekugogICAgfQogIH0KfTs="},{"version":3,"sources":["Hot.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- 热销商品图表 -->\n<template>\n  <div class='com-container'>\n    <div class='com-chart' ref='hot_ref'></div>\n    <span class=\"iconfont arr-left\" @click=\"toLeft\" :style=\"comStyle\">&#xe6ef;</span>\n    <span class=\"iconfont arr-right\" @click=\"toRight\" :style=\"comStyle\">&#xe6ed;</span>\n    <span class=\"cat-name\" :style=\"comStyle\">{{ catName }}</span>\n  </div>\n</template>\n\n<script>\n  import { mapState } from 'vuex'\n  import axios from 'axios'\n  import { getProvinceMapInfo } from '@/utils/map_utils'\n  export default {\n    data () {\n      return {\n        chartInstance: null,\n        allData: null,\n        currentIndex: 0, // 当前所展示出的一级分类数据\n        titleFontSize: 0\n      }\n    },\n    computed: {\n      ...mapState(['theme']),\n      catName () {\n        if (!this.allData) {\n          return ''\n        } else {\n          return this.allData[this.currentIndex].name\n        }\n      },\n      comStyle () {\n        return {\n          fontSize: this.titleFontSize + 'px'\n        }\n      }\n    },\n    mounted () {\n      this.initChart()\n      this.getData()\n      window.addEventListener('resize', this.screenAdapter)\n      this.screenAdapter()\n    },\n    destroyed () {\n      window.removeEventListener('resize', this.screenAdapter)\n    },\n    methods: {\n      initChart () {\n        this.chartInstance = this.$echarts.init(this.$refs.hot_ref, this.theme)\n        const initOption = {\n          title: {\n            text: '💚 热销商品的占比',\n            left: 20,\n            top: 20\n          },\n          legend: {\n            top: '15%',\n            icon: 'circle'\n          },\n          tooltip: {\n            show: true,\n            formatter: arg => {\n              // console.log(arg)\n              const thirdCategory = arg.data.children\n              // 计算出所有三级分类的数值总和\n              let total = 0\n              thirdCategory.forEach(item => {\n                total += item.value\n              })\n              let retStr = ''\n              thirdCategory.forEach(item => {\n                retStr += `\n              ${item.name}:${parseInt(item.value / total * 100) + '%'}\n              <br/>\n              `\n              })\n              return retStr\n            }\n          },\n          series: [\n            {\n              type: 'pie',\n              label: {\n                show: false\n              },\n              emphasis: {\n                label: {\n                  show: true\n                },\n                labelLine: {\n                  show: false\n                }\n              }\n            }\n          ]\n        }\n        this.chartInstance.setOption(initOption)\n      },\n      async getData () {\n        // 获取服务器的数据, 对this.allData进行赋值之后, 调用updateChart方法更新图表\n        const { data: ret } = await this.$http.get('hotproduct')\n        this.allData = ret\n        console.log(this.allData)\n        this.updateChart()\n      },\n      updateChart () {\n        // 处理图表需要的数据\n        const legendData = this.allData[this.currentIndex].children.map(item => {\n          return item.name\n        })\n        const seriesData = this.allData[this.currentIndex].children.map(item => {\n          return {\n            name: item.name,\n            value: item.value,\n            children: item.children // 新增加children的原因是为了在tooltip中的formatter的回调函数中,来拿到这个二级分类下的三级分类数据\n          }\n        })\n        const dataOption = {\n          legend: {\n            data: legendData\n          },\n          series: [\n            {\n              data: seriesData\n            }\n          ]\n        }\n        this.chartInstance.setOption(dataOption)\n      },\n      screenAdapter () {\n        this.titleFontSize = this.$refs.hot_ref.offsetWidth / 100 * 3.6\n        const adapterOption = {\n          title: {\n            textStyle: {\n              fontSize: this.titleFontSize\n            }\n          },\n          legend: {\n            itemWidth: this.titleFontSize,\n            itemHeight: this.titleFontSize,\n            itemGap: this.titleFontSize / 2,\n            textStyle: {\n              fontSize: this.titleFontSize / 2\n            }\n          },\n          series: [\n            {\n              radius: this.titleFontSize * 4.5,\n              center: ['50%', '60%']\n            }\n          ]\n        }\n        this.chartInstance.setOption(adapterOption)\n        this.chartInstance.resize()\n      },\n      toLeft () {\n        this.currentIndex--\n        if (this.currentIndex < 0) {\n          this.currentIndex = this.allData.length - 1\n        }\n        this.updateChart()\n      },\n      toRight () {\n        this.currentIndex++\n        if (this.currentIndex > this.allData.length - 1) {\n          this.currentIndex = 0\n        }\n        this.updateChart()\n      }\n    },\n    watch: {\n      theme () {\n        console.log('主题切换了')\n        this.chartInstance.dispose() // 销毁当前的图表\n        this.initChart() // 重新以最新的主题名称初始化图表对象\n        this.screenAdapter() // 完成屏幕的适配\n        this.updateChart() // 更新图表的展示\n      }\n    }\n  }\n</script>\n\n<style lang='less' scoped>\n  .arr-left {\n    position:absolute;\n    left: 10%;\n    top: 50%;\n    transform: translateY(-50%);\n    cursor: pointer;\n    color: white;\n  }\n  .arr-right {\n    position:absolute;\n    right: 10%;\n    top: 50%;\n    transform: translateY(-50%);\n    cursor: pointer;\n    color: white;\n  }\n  .cat-name {\n    position:absolute;\n    left: 80%;\n    bottom: 20px;\n    color: white;\n  }\n</style>\n"],"sourceRoot":"src/components"}]}