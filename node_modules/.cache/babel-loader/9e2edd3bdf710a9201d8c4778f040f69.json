{"remainingRequest":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\babel-loader\\lib\\index.js!E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\src\\components\\Rank.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\src\\components\\Rank.vue","mtime":1614924310794},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRTovV2Vic3Rvcm1fcHJvZ3JhbS9FY2hhcnRzLVZ1ZS9EYXkwMy9FY2hhcnRzLVZ1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNoYXJ0SW5zdGFuY2U6IG51bGwsCiAgICAgIGFsbERhdGE6IG51bGwsCiAgICAgIHN0YXJ0VmFsdWU6IDAsCiAgICAgIC8vIOWMuuWfn+e8qeaUvueahOi1t+eCueWAvAogICAgICBlbmRWYWx1ZTogOSwKICAgICAgLy8g5Yy65Z+f57yp5pS+55qE57uI54K55YC8CiAgICAgIHRpbWVySWQ6IG51bGwgLy8g5a6a5pe25Zmo55qE5qCH6K+GCgogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICAvLyDlnKjnu4Tku7bliJvlu7rlrozmiJDkuYvlkI4g6L+b6KGM5Zue6LCD5Ye95pWw55qE5rOo5YaMCiAgICB0aGlzLiRzb2NrZXQucmVnaXN0ZXJDYWxsQmFjaygncmFua0RhdGEnLCB0aGlzLmdldERhdGEpOwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuaW5pdENoYXJ0KCk7IC8vIHRoaXMuZ2V0RGF0YSgpCgogICAgdGhpcy4kc29ja2V0LnNlbmQoewogICAgICBhY3Rpb246ICdnZXREYXRhJywKICAgICAgc29ja2V0VHlwZTogJ3JhbmtEYXRhJywKICAgICAgY2hhcnROYW1lOiAncmFuaycsCiAgICAgIHZhbHVlOiAnJwogICAgfSk7CiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5zY3JlZW5BZGFwdGVyKTsKICAgIHRoaXMuc2NyZWVuQWRhcHRlcigpOwogIH0sCiAgZGVzdHJveWVkOiBmdW5jdGlvbiBkZXN0cm95ZWQoKSB7CiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5zY3JlZW5BZGFwdGVyKTsKICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lcklkKTsKICAgIHRoaXMuJHNvY2tldC51blJlZ2lzdGVyQ2FsbEJhY2soJ3JhbmtEYXRhJyk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0Q2hhcnQ6IGZ1bmN0aW9uIGluaXRDaGFydCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZSA9IHRoaXMuJGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLnJhbmtfcmVmLCB0aGlzLnRoZW1lKTsKICAgICAgdmFyIGluaXRPcHRpb24gPSB7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICfwn5KZIOWcsOWMuumUgOWUruaOkuihjCcsCiAgICAgICAgICBsZWZ0OiAyMCwKICAgICAgICAgIHRvcDogMjAKICAgICAgICB9LAogICAgICAgIGdyaWQ6IHsKICAgICAgICAgIHRvcDogJzQwJScsCiAgICAgICAgICBsZWZ0OiAnNSUnLAogICAgICAgICAgcmlnaHQ6ICc1JScsCiAgICAgICAgICBib3R0b206ICc1JScsCiAgICAgICAgICBjb250YWluTGFiZWw6IHRydWUKICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHNob3c6IHRydWUKICAgICAgICB9LAogICAgICAgIHhBeGlzOiB7CiAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknCiAgICAgICAgfSwKICAgICAgICB5QXhpczogewogICAgICAgICAgdHlwZTogJ3ZhbHVlJwogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgdHlwZTogJ2JhcicKICAgICAgICB9XQogICAgICB9OwogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uuc2V0T3B0aW9uKGluaXRPcHRpb24pOwogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uub24oJ21vdXNlb3ZlcicsIGZ1bmN0aW9uICgpIHsKICAgICAgICBjbGVhckludGVydmFsKF90aGlzLnRpbWVySWQpOwogICAgICB9KTsKICAgICAgdGhpcy5jaGFydEluc3RhbmNlLm9uKCdtb3VzZW91dCcsIGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy5zdGFydEludGVydmFsKCk7CiAgICAgIH0pOwogICAgfSwKICAgIGdldERhdGE6IGZ1bmN0aW9uIGdldERhdGEocmV0KSB7CiAgICAgIC8vIOiOt+WPluacjeWKoeWZqOeahOaVsOaNriwg5a+5dGhpcy5hbGxEYXRh6L+b6KGM6LWL5YC85LmL5ZCOLCDosIPnlKh1cGRhdGVDaGFydOaWueazleabtOaWsOWbvuihqAogICAgICAvLyBjb25zdCB7IGRhdGE6IHJldCB9ID0gYXdhaXQgdGhpcy4kaHR0cC5nZXQoJ3JhbmsnKQogICAgICB0aGlzLmFsbERhdGEgPSByZXQ7IC8vIOWvuWFsbERhdGHph4zpnaLnmoTmr4/kuIDkuKrlhYPntKDov5vooYzmjpLluo8sIOS7juWkp+WIsOWwj+i/m+ihjAoKICAgICAgdGhpcy5hbGxEYXRhLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICByZXR1cm4gYi52YWx1ZSAtIGEudmFsdWU7CiAgICAgIH0pOwogICAgICBjb25zb2xlLmxvZyh0aGlzLmFsbERhdGEpOwogICAgICB0aGlzLnVwZGF0ZUNoYXJ0KCk7CiAgICAgIHRoaXMuc3RhcnRJbnRlcnZhbCgpOwogICAgfSwKICAgIHVwZGF0ZUNoYXJ0OiBmdW5jdGlvbiB1cGRhdGVDaGFydCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgY29sb3JBcnIgPSBbWycjMEJBODJDJywgJyM0RkY3NzgnXSwgWycjMkU3MkJGJywgJyMyM0U1RTUnXSwgWycjNTA1MkVFJywgJyNBQjZFRTUnXV07IC8vIOWkhOeQhuWbvuihqOmcgOimgeeahOaVsOaNrgogICAgICAvLyDmiYDmnInnnIHku73miYDlvaLmiJDnmoTmlbDnu4QKCiAgICAgIHZhciBwcm92aW5jZUFyciA9IHRoaXMuYWxsRGF0YS5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gaXRlbS5uYW1lOwogICAgICB9KTsgLy8g5omA5pyJ55yB5Lu95a+55bqU55qE6ZSA5ZSu6YeR6aKdCgogICAgICB2YXIgdmFsdWVBcnIgPSB0aGlzLmFsbERhdGEubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0udmFsdWU7CiAgICAgIH0pOwogICAgICB2YXIgZGF0YU9wdGlvbiA9IHsKICAgICAgICB4QXhpczogewogICAgICAgICAgZGF0YTogcHJvdmluY2VBcnIKICAgICAgICB9LAogICAgICAgIGRhdGFab29tOiB7CiAgICAgICAgICBzaG93OiBmYWxzZSwKICAgICAgICAgIHN0YXJ0VmFsdWU6IHRoaXMuc3RhcnRWYWx1ZSwKICAgICAgICAgIGVuZFZhbHVlOiB0aGlzLmVuZFZhbHVlCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICBkYXRhOiB2YWx1ZUFyciwKICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICBjb2xvcjogZnVuY3Rpb24gY29sb3IoYXJnKSB7CiAgICAgICAgICAgICAgdmFyIHRhcmdldENvbG9yQXJyID0gbnVsbDsKCiAgICAgICAgICAgICAgaWYgKGFyZy52YWx1ZSA+IDMwMCkgewogICAgICAgICAgICAgICAgdGFyZ2V0Q29sb3JBcnIgPSBjb2xvckFyclswXTsKICAgICAgICAgICAgICB9IGVsc2UgaWYgKGFyZy52YWx1ZSA+IDIwMCkgewogICAgICAgICAgICAgICAgdGFyZ2V0Q29sb3JBcnIgPSBjb2xvckFyclsxXTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdGFyZ2V0Q29sb3JBcnIgPSBjb2xvckFyclsyXTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHJldHVybiBuZXcgX3RoaXMyLiRlY2hhcnRzLmdyYXBoaWMuTGluZWFyR3JhZGllbnQoMCwgMCwgMCwgMSwgW3sKICAgICAgICAgICAgICAgIG9mZnNldDogMCwKICAgICAgICAgICAgICAgIGNvbG9yOiB0YXJnZXRDb2xvckFyclswXQogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgIG9mZnNldDogMSwKICAgICAgICAgICAgICAgIGNvbG9yOiB0YXJnZXRDb2xvckFyclsxXQogICAgICAgICAgICAgIH1dKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH1dCiAgICAgIH07CiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5zZXRPcHRpb24oZGF0YU9wdGlvbik7CiAgICB9LAogICAgc2NyZWVuQWRhcHRlcjogZnVuY3Rpb24gc2NyZWVuQWRhcHRlcigpIHsKICAgICAgdmFyIHRpdGxlRm9udFNpemUgPSB0aGlzLiRyZWZzLnJhbmtfcmVmLm9mZnNldFdpZHRoIC8gMTAwICogMy42OwogICAgICB2YXIgYWRhcHRlck9wdGlvbiA9IHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgIGZvbnRTaXplOiB0aXRsZUZvbnRTaXplCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICBiYXJXaWR0aDogdGl0bGVGb250U2l6ZSwKICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICBiYXJCb3JkZXJSYWRpdXM6IFt0aXRsZUZvbnRTaXplIC8gMiwgdGl0bGVGb250U2l6ZSAvIDIsIDAsIDBdCiAgICAgICAgICB9CiAgICAgICAgfV0KICAgICAgfTsKICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnNldE9wdGlvbihhZGFwdGVyT3B0aW9uKTsKICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnJlc2l6ZSgpOwogICAgfSwKICAgIHN0YXJ0SW50ZXJ2YWw6IGZ1bmN0aW9uIHN0YXJ0SW50ZXJ2YWwoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMudGltZXJJZCkgewogICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lcklkKTsKICAgICAgfQoKICAgICAgdGhpcy50aW1lcklkID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMy5zdGFydFZhbHVlKys7CiAgICAgICAgX3RoaXMzLmVuZFZhbHVlKys7CgogICAgICAgIGlmIChfdGhpczMuZW5kVmFsdWUgPiBfdGhpczMuYWxsRGF0YS5sZW5ndGggLSAxKSB7CiAgICAgICAgICBfdGhpczMuc3RhcnRWYWx1ZSA9IDA7CiAgICAgICAgICBfdGhpczMuZW5kVmFsdWUgPSA5OwogICAgICAgIH0KCiAgICAgICAgX3RoaXMzLnVwZGF0ZUNoYXJ0KCk7CiAgICAgIH0sIDIwMDApOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoe30sIG1hcFN0YXRlKFsndGhlbWUnXSkpLAogIHdhdGNoOiB7CiAgICB0aGVtZTogZnVuY3Rpb24gdGhlbWUoKSB7CiAgICAgIGNvbnNvbGUubG9nKCfkuLvpopjliIfmjaLkuoYnKTsKICAgICAgdGhpcy5jaGFydEluc3RhbmNlLmRpc3Bvc2UoKTsgLy8g6ZSA5q+B5b2T5YmN55qE5Zu+6KGoCgogICAgICB0aGlzLmluaXRDaGFydCgpOyAvLyDph43mlrDku6XmnIDmlrDnmoTkuLvpopjlkI3np7DliJ3lp4vljJblm77ooajlr7nosaEKCiAgICAgIHRoaXMuc2NyZWVuQWRhcHRlcigpOyAvLyDlrozmiJDlsY/luZXnmoTpgILphY0KCiAgICAgIHRoaXMudXBkYXRlQ2hhcnQoKTsgLy8g5pu05paw5Zu+6KGo55qE5bGV56S6CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Rank.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- 地区销售排行 -->\n<template>\n  <div class='com-container'>\n    <div class='com-chart' ref='rank_ref'></div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nexport default {\n  data () {\n    return {\n      chartInstance: null,\n      allData: null,\n      startValue: 0, // 区域缩放的起点值\n      endValue: 9, // 区域缩放的终点值\n      timerId: null // 定时器的标识\n    }\n  },\n  created () {\n    // 在组件创建完成之后 进行回调函数的注册\n    this.$socket.registerCallBack('rankData', this.getData)\n  },\n  mounted () {\n    this.initChart()\n    // this.getData()\n    this.$socket.send({\n      action: 'getData',\n      socketType: 'rankData',\n      chartName: 'rank',\n      value: ''\n    })\n    window.addEventListener('resize', this.screenAdapter)\n    this.screenAdapter()\n  },\n  destroyed () {\n    window.removeEventListener('resize', this.screenAdapter)\n    clearInterval(this.timerId)\n    this.$socket.unRegisterCallBack('rankData')\n  },\n  methods: {\n    initChart () {\n      this.chartInstance = this.$echarts.init(this.$refs.rank_ref, this.theme)\n      const initOption = {\n        title: {\n          text: '💙 地区销售排行',\n          left: 20,\n          top: 20\n        },\n        grid: {\n          top: '40%',\n          left: '5%',\n          right: '5%',\n          bottom: '5%',\n          containLabel: true\n        },\n        tooltip: {\n          show: true\n        },\n        xAxis: {\n          type: 'category'\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [\n          {\n            type: 'bar'\n          }\n        ]\n      }\n      this.chartInstance.setOption(initOption)\n      this.chartInstance.on('mouseover', () => {\n        clearInterval(this.timerId)\n      })\n      this.chartInstance.on('mouseout', () => {\n        this.startInterval()\n      })\n    },\n    getData (ret) {\n      // 获取服务器的数据, 对this.allData进行赋值之后, 调用updateChart方法更新图表\n      // const { data: ret } = await this.$http.get('rank')\n      this.allData = ret\n      // 对allData里面的每一个元素进行排序, 从大到小进行\n      this.allData.sort((a, b) => {\n        return b.value - a.value\n      })\n      console.log(this.allData)\n      this.updateChart()\n      this.startInterval()\n    },\n    updateChart () {\n      const colorArr = [\n        ['#0BA82C', '#4FF778'],\n        ['#2E72BF', '#23E5E5'],\n        ['#5052EE', '#AB6EE5']\n      ]\n      // 处理图表需要的数据\n      // 所有省份所形成的数组\n      const provinceArr = this.allData.map(item => {\n        return item.name\n      })\n      // 所有省份对应的销售金额\n      const valueArr = this.allData.map(item => {\n        return item.value\n      })\n      const dataOption = {\n        xAxis: {\n          data: provinceArr\n        },\n        dataZoom: {\n          show: false,\n          startValue: this.startValue,\n          endValue: this.endValue\n        },\n        series: [\n          {\n            data: valueArr,\n            itemStyle: {\n              color: arg => {\n                let targetColorArr = null\n                if (arg.value > 300) {\n                  targetColorArr = colorArr[0]\n                } else if (arg.value > 200) {\n                  targetColorArr = colorArr[1]\n                } else {\n                  targetColorArr = colorArr[2]\n                }\n                return new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                  {\n                    offset: 0,\n                    color: targetColorArr[0]\n                  },\n                  {\n                    offset: 1,\n                    color: targetColorArr[1]\n                  }\n                ])\n              }\n            }\n          }\n        ]\n      }\n      this.chartInstance.setOption(dataOption)\n    },\n    screenAdapter () {\n      const titleFontSize = this.$refs.rank_ref.offsetWidth / 100 * 3.6\n      const adapterOption = {\n        title: {\n          textStyle: {\n            fontSize: titleFontSize\n          }\n        },\n        series: [\n          {\n            barWidth: titleFontSize,\n            itemStyle: {\n              barBorderRadius: [titleFontSize / 2, titleFontSize / 2, 0, 0]\n            }\n          }\n        ]\n      }\n      this.chartInstance.setOption(adapterOption)\n      this.chartInstance.resize()\n    },\n    startInterval () {\n      if (this.timerId) {\n        clearInterval(this.timerId)\n      }\n      this.timerId = setInterval(() => {\n        this.startValue++\n        this.endValue++\n        if (this.endValue > this.allData.length - 1) {\n          this.startValue = 0\n          this.endValue = 9\n        }\n        this.updateChart()\n      }, 2000)\n    }\n  },\n  computed: {\n    ...mapState(['theme'])\n  },\n  watch: {\n    theme () {\n      console.log('主题切换了')\n      this.chartInstance.dispose() // 销毁当前的图表\n      this.initChart() // 重新以最新的主题名称初始化图表对象\n      this.screenAdapter() // 完成屏幕的适配\n      this.updateChart() // 更新图表的展示\n    }\n  }\n}\n</script>\n\n<style lang='less' scoped>\n</style>\n"],"sourceRoot":"src/components"}]}