{"remainingRequest":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\src\\components\\Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\src\\components\\Map.vue","mtime":1614924310753},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCcKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJwppbXBvcnQgeyBnZXRQcm92aW5jZU1hcEluZm8gfSBmcm9tICdAL3V0aWxzL21hcF91dGlscycKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgY2hhcnRJbnN0YW5jZTogbnVsbCwKICAgICAgYWxsRGF0YTogbnVsbCwKICAgICAgbWFwRGF0YToge30gLy8g5omA6I635Y+W55qE55yB5Lu955qE5Zyw5Zu+55+i6YeP5pWw5o2uCiAgICB9CiAgfSwKICBjcmVhdGVkICgpIHsKICAgIC8vIOWcqOe7hOS7tuWIm+W7uuWujOaIkOS5i+WQjiDov5vooYzlm57osIPlh73mlbDnmoTms6jlhowKICAgIHRoaXMuJHNvY2tldC5yZWdpc3RlckNhbGxCYWNrKCdtYXBEYXRhJywgdGhpcy5nZXREYXRhKQogIH0sCiAgbW91bnRlZCAoKSB7CiAgICB0aGlzLmluaXRDaGFydCgpCiAgICAvLyB0aGlzLmdldERhdGEoKQogICAgdGhpcy4kc29ja2V0LnNlbmQoewogICAgICBhY3Rpb246ICdnZXREYXRhJywKICAgICAgc29ja2V0VHlwZTogJ21hcERhdGEnLAogICAgICBjaGFydE5hbWU6ICdtYXAnLAogICAgICB2YWx1ZTogJycKICAgIH0pCiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5zY3JlZW5BZGFwdGVyKQogICAgdGhpcy5zY3JlZW5BZGFwdGVyKCkKICB9LAogIGRlc3Ryb3llZCAoKSB7CiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5zY3JlZW5BZGFwdGVyKQogICAgdGhpcy4kc29ja2V0LnVuUmVnaXN0ZXJDYWxsQmFjaygnbWFwRGF0YScpCiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBpbml0Q2hhcnQgKCkgewogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2UgPSB0aGlzLiRlY2hhcnRzLmluaXQodGhpcy4kcmVmcy5tYXBfcmVmLCB0aGlzLnRoZW1lKQogICAgICAvLyDojrflj5bkuK3lm73lnLDlm77nmoTnn6Lph4/mlbDmja4KICAgICAgLy8gaHR0cDovL2xvY2FsaG9zdDo4OTk5L3N0YXRpYy9tYXAvY2hpbmEuanNvbgogICAgICAvLyDnlLHkuo7miJHku6znjrDlnKjojrflj5bnmoTlnLDlm77nn6Lph4/mlbDmja7lubbkuI3mmK/kvY3kuo5LT0Ey55qE5ZCO5Y+wLCDmiYDku6XlkrHku6zkuI3og73kvb/nlKh0aGlzLiRodHRwCiAgICAgIGNvbnN0IHJldCA9IGF3YWl0IGF4aW9zLmdldCgnaHR0cDovL2xvY2FsaG9zdDo4OTk5L3N0YXRpYy9tYXAvY2hpbmEuanNvbicpCiAgICAgIHRoaXMuJGVjaGFydHMucmVnaXN0ZXJNYXAoJ2NoaW5hJywgcmV0LmRhdGEpCiAgICAgIGNvbnN0IGluaXRPcHRpb24gPSB7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICfwn5KcIOWVhuWutuWIhuW4gycsCiAgICAgICAgICBsZWZ0OiAyMCwKICAgICAgICAgIHRvcDogMjAKICAgICAgICB9LAogICAgICAgIGdlbzogewogICAgICAgICAgdHlwZTogJ21hcCcsCiAgICAgICAgICBtYXA6ICdjaGluYScsCiAgICAgICAgICB0b3A6ICc1JScsCiAgICAgICAgICBib3R0b206ICc1JScsCiAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgYXJlYUNvbG9yOiAnIzJFNzJCRicsCiAgICAgICAgICAgIGJvcmRlckNvbG9yOiAnIzMzMycKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgbGVmdDogJzUlJywKICAgICAgICAgIGJvdHRvbTogJzUlJywKICAgICAgICAgIG9yaWVudDogJ3ZlcnRpY2FsJwogICAgICAgIH0KICAgICAgfQogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uuc2V0T3B0aW9uKGluaXRPcHRpb24pCiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5vbignY2xpY2snLCBhc3luYyBhcmcgPT4gewogICAgICAgIC8vIGFyZy5uYW1lIOW+l+WIsOaJgOeCueWHu+eahOecgeS7vSwg6L+Z5Liq55yB5Lu95LuW5piv5Lit5paHCiAgICAgICAgY29uc3QgcHJvdmluY2VJbmZvID0gZ2V0UHJvdmluY2VNYXBJbmZvKGFyZy5uYW1lKQogICAgICAgIGNvbnNvbGUubG9nKHByb3ZpbmNlSW5mbykKICAgICAgICAvLyDpnIDopoHojrflj5bov5nkuKrnnIHku73nmoTlnLDlm77nn6Lph4/mlbDmja4KICAgICAgICAvLyDliKTmlq3lvZPliY3miYDngrnlh7vnmoTov5nkuKrnnIHku73nmoTlnLDlm77nn6Lph4/mlbDmja7lnKhtYXBEYXRh5Lit5piv5ZCm5a2Y5ZyoCiAgICAgICAgaWYgKCF0aGlzLm1hcERhdGFbcHJvdmluY2VJbmZvLmtleV0pIHsKICAgICAgICAgIGNvbnN0IHJldCA9IGF3YWl0IGF4aW9zLmdldCgnaHR0cDovL2xvY2FsaG9zdDo4OTk5JyArIHByb3ZpbmNlSW5mby5wYXRoKQogICAgICAgICAgdGhpcy5tYXBEYXRhW3Byb3ZpbmNlSW5mby5rZXldID0gcmV0LmRhdGEKICAgICAgICAgIHRoaXMuJGVjaGFydHMucmVnaXN0ZXJNYXAocHJvdmluY2VJbmZvLmtleSwgcmV0LmRhdGEpCiAgICAgICAgfQogICAgICAgIGNvbnN0IGNoYW5nZU9wdGlvbiA9IHsKICAgICAgICAgIGdlbzogewogICAgICAgICAgICBtYXA6IHByb3ZpbmNlSW5mby5rZXkKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnNldE9wdGlvbihjaGFuZ2VPcHRpb24pCiAgICAgIH0pCiAgICB9LAogICAgZ2V0RGF0YSAocmV0KSB7CiAgICAgIC8vIOiOt+WPluacjeWKoeWZqOeahOaVsOaNriwg5a+5dGhpcy5hbGxEYXRh6L+b6KGM6LWL5YC85LmL5ZCOLCDosIPnlKh1cGRhdGVDaGFydOaWueazleabtOaWsOWbvuihqAogICAgICAvLyBjb25zdCB7IGRhdGE6IHJldCB9ID0gYXdhaXQgdGhpcy4kaHR0cC5nZXQoJ21hcCcpCiAgICAgIHRoaXMuYWxsRGF0YSA9IHJldAogICAgICBjb25zb2xlLmxvZyh0aGlzLmFsbERhdGEpCiAgICAgIHRoaXMudXBkYXRlQ2hhcnQoKQogICAgfSwKICAgIHVwZGF0ZUNoYXJ0ICgpIHsKICAgICAgLy8g5aSE55CG5Zu+6KGo6ZyA6KaB55qE5pWw5o2uCiAgICAgIC8vIOWbvuS+i+eahOaVsOaNrgogICAgICBjb25zdCBsZWdlbmRBcnIgPSB0aGlzLmFsbERhdGEubWFwKGl0ZW0gPT4gewogICAgICAgIHJldHVybiBpdGVtLm5hbWUKICAgICAgfSkKICAgICAgY29uc3Qgc2VyaWVzQXJyID0gdGhpcy5hbGxEYXRhLm1hcChpdGVtID0+IHsKICAgICAgICAvLyByZXR1cm7nmoTov5nkuKrlr7nosaHlsLHku6PooajnmoTmmK/kuIDkuKrnsbvliKvkuIvnmoTmiYDmnInmlaPngrnmlbDmja4KICAgICAgICAvLyDlpoLmnpzmg7PlnKjlnLDlm77kuK3mmL7npLrmlaPngrnnmoTmlbDmja4sIOaIkeS7rOmcgOimgee7meaVo+eCueeahOWbvuihqOWinuWKoOS4gOS4qumFjee9riwgY29vcmRpbmF0ZVN5c3RlbTpnZW8KICAgICAgICByZXR1cm4gewogICAgICAgICAgdHlwZTogJ2VmZmVjdFNjYXR0ZXInLAogICAgICAgICAgcmlwcGxlRWZmZWN0OiB7CiAgICAgICAgICAgIHNjYWxlOiA1LAogICAgICAgICAgICBicnVzaFR5cGU6ICdzdHJva2UnCiAgICAgICAgICB9LAogICAgICAgICAgbmFtZTogaXRlbS5uYW1lLAogICAgICAgICAgZGF0YTogaXRlbS5jaGlsZHJlbiwKICAgICAgICAgIGNvb3JkaW5hdGVTeXN0ZW06ICdnZW8nCiAgICAgICAgfQogICAgICB9KQogICAgICBjb25zdCBkYXRhT3B0aW9uID0gewogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgZGF0YTogbGVnZW5kQXJyCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IHNlcmllc0FycgogICAgICB9CiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5zZXRPcHRpb24oZGF0YU9wdGlvbikKICAgIH0sCiAgICBzY3JlZW5BZGFwdGVyICgpIHsKICAgICAgY29uc3QgdGl0bGVGb250U2l6ZSA9IHRoaXMuJHJlZnMubWFwX3JlZi5vZmZzZXRXaWR0aCAvIDEwMCAqIDMuNgogICAgICBjb25zdCBhZGFwdGVyT3B0aW9uID0gewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgZm9udFNpemU6IHRpdGxlRm9udFNpemUKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgaXRlbVdpZHRoOiB0aXRsZUZvbnRTaXplIC8gMiwKICAgICAgICAgIGl0ZW1IZWlnaHQ6IHRpdGxlRm9udFNpemUgLyAyLAogICAgICAgICAgaXRlbUdhcDogdGl0bGVGb250U2l6ZSAvIDIsCiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgZm9udFNpemU6IHRpdGxlRm9udFNpemUgLyAyCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5zZXRPcHRpb24oYWRhcHRlck9wdGlvbikKICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnJlc2l6ZSgpCiAgICB9LAogICAgLy8g5Zue5Yiw5Lit5Zu95Zyw5Zu+CiAgICByZXZlcnRNYXAgKCkgewogICAgICBjb25zdCByZXZlcnRPcHRpb24gPSB7CiAgICAgICAgZ2VvOiB7CiAgICAgICAgICBtYXA6ICdjaGluYScKICAgICAgICB9CiAgICAgIH0KICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnNldE9wdGlvbihyZXZlcnRPcHRpb24pCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgLi4ubWFwU3RhdGUoWyd0aGVtZSddKQogIH0sCiAgd2F0Y2g6IHsKICAgIHRoZW1lICgpIHsKICAgICAgY29uc29sZS5sb2coJ+S4u+mimOWIh+aNouS6hicpCiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5kaXNwb3NlKCkgLy8g6ZSA5q+B5b2T5YmN55qE5Zu+6KGoCiAgICAgIHRoaXMuaW5pdENoYXJ0KCkgLy8g6YeN5paw5Lul5pyA5paw55qE5Li76aKY5ZCN56ew5Yid5aeL5YyW5Zu+6KGo5a+56LGhCiAgICAgIHRoaXMuc2NyZWVuQWRhcHRlcigpIC8vIOWujOaIkOWxj+W5leeahOmAgumFjQogICAgICB0aGlzLnVwZGF0ZUNoYXJ0KCkgLy8g5pu05paw5Zu+6KGo55qE5bGV56S6CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Map.vue"],"names":[],"mappingsfile":"Map.vue","sourceRoot":"src/components","sourcesContent":["<!-- ÂïÜÂÆ∂ÂàÜÂ∏ÉÂõæË°® -->\n<template>\n  <div class='com-container' @dblclick=\"revertMap\">\n    <div class='com-chart' ref='map_ref'></div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport axios from 'axios'\nimport { getProvinceMapInfo } from '@/utils/map_utils'\nexport default {\n  data () {\n    return {\n      chartInstance: null,\n      allData: null,\n      mapData: {} // ÊâÄËé∑ÂèñÁöÑÁúÅ‰ªΩÁöÑÂú∞ÂõæÁü¢ÈáèÊï∞ÊçÆ\n    }\n  },\n  created () {\n    // Âú®ÁªÑ‰ª∂ÂàõÂª∫ÂÆåÊàê‰πãÂêé ËøõË°åÂõûË∞ÉÂáΩÊï∞ÁöÑÊ≥®ÂÜå\n    this.$socket.registerCallBack('mapData', this.getData)\n  },\n  mounted () {\n    this.initChart()\n    // this.getData()\n    this.$socket.send({\n      action: 'getData',\n      socketType: 'mapData',\n      chartName: 'map',\n      value: ''\n    })\n    window.addEventListener('resize', this.screenAdapter)\n    this.screenAdapter()\n  },\n  destroyed () {\n    window.removeEventListener('resize', this.screenAdapter)\n    this.$socket.unRegisterCallBack('mapData')\n  },\n  methods: {\n    async initChart () {\n      this.chartInstance = this.$echarts.init(this.$refs.map_ref, this.theme)\n      // Ëé∑Âèñ‰∏≠ÂõΩÂú∞ÂõæÁöÑÁü¢ÈáèÊï∞ÊçÆ\n      // http://localhost:8999/static/map/china.json\n      // Áî±‰∫éÊàë‰ª¨Áé∞Âú®Ëé∑ÂèñÁöÑÂú∞ÂõæÁü¢ÈáèÊï∞ÊçÆÂπ∂‰∏çÊòØ‰Ωç‰∫éKOA2ÁöÑÂêéÂè∞, ÊâÄ‰ª•Âí±‰ª¨‰∏çËÉΩ‰ΩøÁî®this.$http\n      const ret = await axios.get('http://localhost:8999/static/map/china.json')\n      this.$echarts.registerMap('china', ret.data)\n      const initOption = {\n        title: {\n          text: 'üíú ÂïÜÂÆ∂ÂàÜÂ∏É',\n          left: 20,\n          top: 20\n        },\n        geo: {\n          type: 'map',\n          map: 'china',\n          top: '5%',\n          bottom: '5%',\n          itemStyle: {\n            areaColor: '#2E72BF',\n            borderColor: '#333'\n          }\n        },\n        legend: {\n          left: '5%',\n          bottom: '5%',\n          orient: 'vertical'\n        }\n      }\n      this.chartInstance.setOption(initOption)\n      this.chartInstance.on('click', async arg => {\n        // arg.name ÂæóÂà∞ÊâÄÁÇπÂáªÁöÑÁúÅ‰ªΩ, Ëøô‰∏™ÁúÅ‰ªΩ‰ªñÊòØ‰∏≠Êñá\n        const provinceInfo = getProvinceMapInfo(arg.name)\n        console.log(provinceInfo)\n        // ÈúÄË¶ÅËé∑ÂèñËøô‰∏™ÁúÅ‰ªΩÁöÑÂú∞ÂõæÁü¢ÈáèÊï∞ÊçÆ\n        // Âà§Êñ≠ÂΩìÂâçÊâÄÁÇπÂáªÁöÑËøô‰∏™ÁúÅ‰ªΩÁöÑÂú∞ÂõæÁü¢ÈáèÊï∞ÊçÆÂú®mapData‰∏≠ÊòØÂê¶Â≠òÂú®\n        if (!this.mapData[provinceInfo.key]) {\n          const ret = await axios.get('http://localhost:8999' + provinceInfo.path)\n          this.mapData[provinceInfo.key] = ret.data\n          this.$echarts.registerMap(provinceInfo.key, ret.data)\n        }\n        const changeOption = {\n          geo: {\n            map: provinceInfo.key\n          }\n        }\n        this.chartInstance.setOption(changeOption)\n      })\n    },\n    getData (ret) {\n      // Ëé∑ÂèñÊúçÂä°Âô®ÁöÑÊï∞ÊçÆ, ÂØπthis.allDataËøõË°åËµãÂÄº‰πãÂêé, Ë∞ÉÁî®updateChartÊñπÊ≥ïÊõ¥Êñ∞ÂõæË°®\n      // const { data: ret } = await this.$http.get('map')\n      this.allData = ret\n      console.log(this.allData)\n      this.updateChart()\n    },\n    updateChart () {\n      // Â§ÑÁêÜÂõæË°®ÈúÄË¶ÅÁöÑÊï∞ÊçÆ\n      // Âõæ‰æãÁöÑÊï∞ÊçÆ\n      const legendArr = this.allData.map(item => {\n        return item.name\n      })\n      const seriesArr = this.allData.map(item => {\n        // returnÁöÑËøô‰∏™ÂØπË±°Â∞±‰ª£Ë°®ÁöÑÊòØ‰∏Ä‰∏™Á±ªÂà´‰∏ãÁöÑÊâÄÊúâÊï£ÁÇπÊï∞ÊçÆ\n        // Â¶ÇÊûúÊÉ≥Âú®Âú∞Âõæ‰∏≠ÊòæÁ§∫Êï£ÁÇπÁöÑÊï∞ÊçÆ, Êàë‰ª¨ÈúÄË¶ÅÁªôÊï£ÁÇπÁöÑÂõæË°®Â¢ûÂä†‰∏Ä‰∏™ÈÖçÁΩÆ, coordinateSystem:geo\n        return {\n          type: 'effectScatter',\n          rippleEffect: {\n            scale: 5,\n            brushType: 'stroke'\n          },\n          name: item.name,\n          data: item.children,\n          coordinateSystem: 'geo'\n        }\n      })\n      const dataOption = {\n        legend: {\n          data: legendArr\n        },\n        series: seriesArr\n      }\n      this.chartInstance.setOption(dataOption)\n    },\n    screenAdapter () {\n      const titleFontSize = this.$refs.map_ref.offsetWidth / 100 * 3.6\n      const adapterOption = {\n        title: {\n          textStyle: {\n            fontSize: titleFontSize\n          }\n        },\n        legend: {\n          itemWidth: titleFontSize / 2,\n          itemHeight: titleFontSize / 2,\n          itemGap: titleFontSize / 2,\n          textStyle: {\n            fontSize: titleFontSize / 2\n          }\n        }\n      }\n      this.chartInstance.setOption(adapterOption)\n      this.chartInstance.resize()\n    },\n    // ÂõûÂà∞‰∏≠ÂõΩÂú∞Âõæ\n    revertMap () {\n      const revertOption = {\n        geo: {\n          map: 'china'\n        }\n      }\n      this.chartInstance.setOption(revertOption)\n    }\n  },\n  computed: {\n    ...mapState(['theme'])\n  },\n  watch: {\n    theme () {\n      console.log('‰∏ªÈ¢òÂàáÊç¢‰∫Ü')\n      this.chartInstance.dispose() // ÈîÄÊØÅÂΩìÂâçÁöÑÂõæË°®\n      this.initChart() // ÈáçÊñ∞‰ª•ÊúÄÊñ∞ÁöÑ‰∏ªÈ¢òÂêçÁß∞ÂàùÂßãÂåñÂõæË°®ÂØπË±°\n      this.screenAdapter() // ÂÆåÊàêÂ±èÂπïÁöÑÈÄÇÈÖç\n      this.updateChart() // Êõ¥Êñ∞ÂõæË°®ÁöÑÂ±ïÁ§∫\n    }\n  }\n}\n</script>\n\n<style lang='less' scoped>\n</style>\n"]}]}