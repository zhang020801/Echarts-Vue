{"remainingRequest":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\src\\components\\Hot.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\src\\components\\Hot.vue","mtime":1614874527797},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCcKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJwppbXBvcnQgeyBnZXRQcm92aW5jZU1hcEluZm8gfSBmcm9tICdAL3V0aWxzL21hcF91dGlscycKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgY2hhcnRJbnN0YW5jZTogbnVsbCwKICAgICAgYWxsRGF0YTogbnVsbCwKICAgICAgY3VycmVudEluZGV4OiAwLCAvLyDlvZPliY3miYDlsZXnpLrlh7rnmoTkuIDnuqfliIbnsbvmlbDmja4KICAgICAgdGl0bGVGb250U2l6ZTogMAogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcFN0YXRlKFsndGhlbWUnXSksCiAgICBjYXROYW1lICgpIHsKICAgICAgaWYgKCF0aGlzLmFsbERhdGEpIHsKICAgICAgICByZXR1cm4gJycKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gdGhpcy5hbGxEYXRhW3RoaXMuY3VycmVudEluZGV4XS5uYW1lCiAgICAgIH0KICAgIH0sCiAgICBjb21TdHlsZSAoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgZm9udFNpemU6IHRoaXMudGl0bGVGb250U2l6ZSArICdweCcKICAgICAgfQogICAgfQogIH0sCiAgbW91bnRlZCAoKSB7CiAgICB0aGlzLmluaXRDaGFydCgpCiAgICB0aGlzLmdldERhdGEoKQogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuc2NyZWVuQWRhcHRlcikKICAgIHRoaXMuc2NyZWVuQWRhcHRlcigpCiAgfSwKICBkZXN0cm95ZWQgKCkgewogICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuc2NyZWVuQWRhcHRlcikKICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXRDaGFydCAoKSB7CiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZSA9IHRoaXMuJGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLmhvdF9yZWYsIHRoaXMudGhlbWUpCiAgICAgIGNvbnN0IGluaXRPcHRpb24gPSB7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICfwn5KaIOeDremUgOWVhuWTgeeahOWNoOavlCcsCiAgICAgICAgICBsZWZ0OiAyMCwKICAgICAgICAgIHRvcDogMjAKICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgdG9wOiAnMTUlJywKICAgICAgICAgIGljb246ICdjaXJjbGUnCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgZm9ybWF0dGVyOiBhcmcgPT4gewogICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhhcmcpCiAgICAgICAgICAgIGNvbnN0IHRoaXJkQ2F0ZWdvcnkgPSBhcmcuZGF0YS5jaGlsZHJlbgogICAgICAgICAgICAvLyDorqHnrpflh7rmiYDmnInkuInnuqfliIbnsbvnmoTmlbDlgLzmgLvlkowKICAgICAgICAgICAgbGV0IHRvdGFsID0gMAogICAgICAgICAgICB0aGlyZENhdGVnb3J5LmZvckVhY2goaXRlbSA9PiB7CiAgICAgICAgICAgICAgdG90YWwgKz0gaXRlbS52YWx1ZQogICAgICAgICAgICB9KQogICAgICAgICAgICBsZXQgcmV0U3RyID0gJycKICAgICAgICAgICAgdGhpcmRDYXRlZ29yeS5mb3JFYWNoKGl0ZW0gPT4gewogICAgICAgICAgICAgIHJldFN0ciArPSBgCiAgICAgICAgICAgICR7aXRlbS5uYW1lfToke3BhcnNlSW50KGl0ZW0udmFsdWUgLyB0b3RhbCAqIDEwMCkgKyAnJSd9CiAgICAgICAgICAgIDxici8+CiAgICAgICAgICAgIGAKICAgICAgICAgICAgfSkKICAgICAgICAgICAgcmV0dXJuIHJldFN0cgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIHR5cGU6ICdwaWUnLAogICAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICAgIHNob3c6IHRydWUKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGxhYmVsTGluZTogewogICAgICAgICAgICAgICAgc2hvdzogZmFsc2UKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0KICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnNldE9wdGlvbihpbml0T3B0aW9uKQogICAgfSwKICAgIGFzeW5jIGdldERhdGEgKCkgewogICAgICAvLyDojrflj5bmnI3liqHlmajnmoTmlbDmja4sIOWvuXRoaXMuYWxsRGF0Yei/m+ihjOi1i+WAvOS5i+WQjiwg6LCD55SodXBkYXRlQ2hhcnTmlrnms5Xmm7TmlrDlm77ooagKICAgICAgY29uc3QgeyBkYXRhOiByZXQgfSA9IGF3YWl0IHRoaXMuJGh0dHAuZ2V0KCdob3Rwcm9kdWN0JykKICAgICAgdGhpcy5hbGxEYXRhID0gcmV0CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuYWxsRGF0YSkKICAgICAgdGhpcy51cGRhdGVDaGFydCgpCiAgICB9LAogICAgdXBkYXRlQ2hhcnQgKCkgewogICAgICAvLyDlpITnkIblm77ooajpnIDopoHnmoTmlbDmja4KICAgICAgY29uc3QgbGVnZW5kRGF0YSA9IHRoaXMuYWxsRGF0YVt0aGlzLmN1cnJlbnRJbmRleF0uY2hpbGRyZW4ubWFwKGl0ZW0gPT4gewogICAgICAgIHJldHVybiBpdGVtLm5hbWUKICAgICAgfSkKICAgICAgY29uc3Qgc2VyaWVzRGF0YSA9IHRoaXMuYWxsRGF0YVt0aGlzLmN1cnJlbnRJbmRleF0uY2hpbGRyZW4ubWFwKGl0ZW0gPT4gewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBuYW1lOiBpdGVtLm5hbWUsCiAgICAgICAgICB2YWx1ZTogaXRlbS52YWx1ZSwKICAgICAgICAgIGNoaWxkcmVuOiBpdGVtLmNoaWxkcmVuIC8vIOaWsOWinuWKoGNoaWxkcmVu55qE5Y6f5Zug5piv5Li65LqG5ZyodG9vbHRpcOS4reeahGZvcm1hdHRlcueahOWbnuiwg+WHveaVsOS4rSzmnaXmi7/liLDov5nkuKrkuoznuqfliIbnsbvkuIvnmoTkuInnuqfliIbnsbvmlbDmja4KICAgICAgICB9CiAgICAgIH0pCiAgICAgIGNvbnN0IGRhdGFPcHRpb24gPSB7CiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBkYXRhOiBsZWdlbmREYXRhCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgZGF0YTogc2VyaWVzRGF0YQogICAgICAgICAgfQogICAgICAgIF0KICAgICAgfQogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uuc2V0T3B0aW9uKGRhdGFPcHRpb24pCiAgICB9LAogICAgc2NyZWVuQWRhcHRlciAoKSB7CiAgICAgIHRoaXMudGl0bGVGb250U2l6ZSA9IHRoaXMuJHJlZnMuaG90X3JlZi5vZmZzZXRXaWR0aCAvIDEwMCAqIDMuNgogICAgICBjb25zdCBhZGFwdGVyT3B0aW9uID0gewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgZm9udFNpemU6IHRoaXMudGl0bGVGb250U2l6ZQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBpdGVtV2lkdGg6IHRoaXMudGl0bGVGb250U2l6ZSwKICAgICAgICAgIGl0ZW1IZWlnaHQ6IHRoaXMudGl0bGVGb250U2l6ZSwKICAgICAgICAgIGl0ZW1HYXA6IHRoaXMudGl0bGVGb250U2l6ZSAvIDIsCiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgZm9udFNpemU6IHRoaXMudGl0bGVGb250U2l6ZSAvIDIKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHNlcmllczogWwogICAgICAgICAgewogICAgICAgICAgICByYWRpdXM6IHRoaXMudGl0bGVGb250U2l6ZSAqIDQuNSwKICAgICAgICAgICAgY2VudGVyOiBbJzUwJScsICc2MCUnXQogICAgICAgICAgfQogICAgICAgIF0KICAgICAgfQogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uuc2V0T3B0aW9uKGFkYXB0ZXJPcHRpb24pCiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5yZXNpemUoKQogICAgfSwKICAgIHRvTGVmdCAoKSB7CiAgICAgIHRoaXMuY3VycmVudEluZGV4LS0KICAgICAgaWYgKHRoaXMuY3VycmVudEluZGV4IDwgMCkgewogICAgICAgIHRoaXMuY3VycmVudEluZGV4ID0gdGhpcy5hbGxEYXRhLmxlbmd0aCAtIDEKICAgICAgfQogICAgICB0aGlzLnVwZGF0ZUNoYXJ0KCkKICAgIH0sCiAgICB0b1JpZ2h0ICgpIHsKICAgICAgdGhpcy5jdXJyZW50SW5kZXgrKwogICAgICBpZiAodGhpcy5jdXJyZW50SW5kZXggPiB0aGlzLmFsbERhdGEubGVuZ3RoIC0gMSkgewogICAgICAgIHRoaXMuY3VycmVudEluZGV4ID0gMAogICAgICB9CiAgICAgIHRoaXMudXBkYXRlQ2hhcnQoKQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIHRoZW1lICgpIHsKICAgICAgY29uc29sZS5sb2coJ+S4u+mimOWIh+aNouS6hicpCiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5kaXNwb3NlKCkgLy8g6ZSA5q+B5b2T5YmN55qE5Zu+6KGoCiAgICAgIHRoaXMuaW5pdENoYXJ0KCkgLy8g6YeN5paw5Lul5pyA5paw55qE5Li76aKY5ZCN56ew5Yid5aeL5YyW5Zu+6KGo5a+56LGhCiAgICAgIHRoaXMuc2NyZWVuQWRhcHRlcigpIC8vIOWujOaIkOWxj+W5leeahOmAgumFjQogICAgICB0aGlzLnVwZGF0ZUNoYXJ0KCkgLy8g5pu05paw5Zu+6KGo55qE5bGV56S6CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Hot.vue"],"names":[],"mappingsfile":"Hot.vue","sourceRoot":"src/components","sourcesContent":["<!-- 热销商品图表 -->\n<template>\n  <div class='com-container'>\n    <div class='com-chart' ref='hot_ref'></div>\n    <span class=\"iconfont arr-left\" @click=\"toLeft\" :style=\"comStyle\">&#xe6ef;</span>\n    <span class=\"iconfont arr-right\" @click=\"toRight\" :style=\"comStyle\">&#xe6ed;</span>\n    <span class=\"cat-name\" :style=\"comStyle\">{{ catName }}</span>\n  </div>\n</template>\n\n<script>\n  import { mapState } from 'vuex'\n  import axios from 'axios'\n  import { getProvinceMapInfo } from '@/utils/map_utils'\n  export default {\n    data () {\n      return {\n        chartInstance: null,\n        allData: null,\n        currentIndex: 0, // 当前所展示出的一级分类数据\n        titleFontSize: 0\n      }\n    },\n    computed: {\n      ...mapState(['theme']),\n      catName () {\n        if (!this.allData) {\n          return ''\n        } else {\n          return this.allData[this.currentIndex].name\n        }\n      },\n      comStyle () {\n        return {\n          fontSize: this.titleFontSize + 'px'\n        }\n      }\n    },\n    mounted () {\n      this.initChart()\n      this.getData()\n      window.addEventListener('resize', this.screenAdapter)\n      this.screenAdapter()\n    },\n    destroyed () {\n      window.removeEventListener('resize', this.screenAdapter)\n    },\n    methods: {\n      initChart () {\n        this.chartInstance = this.$echarts.init(this.$refs.hot_ref, this.theme)\n        const initOption = {\n          title: {\n            text: '💚 热销商品的占比',\n            left: 20,\n            top: 20\n          },\n          legend: {\n            top: '15%',\n            icon: 'circle'\n          },\n          tooltip: {\n            show: true,\n            formatter: arg => {\n              // console.log(arg)\n              const thirdCategory = arg.data.children\n              // 计算出所有三级分类的数值总和\n              let total = 0\n              thirdCategory.forEach(item => {\n                total += item.value\n              })\n              let retStr = ''\n              thirdCategory.forEach(item => {\n                retStr += `\n              ${item.name}:${parseInt(item.value / total * 100) + '%'}\n              <br/>\n              `\n              })\n              return retStr\n            }\n          },\n          series: [\n            {\n              type: 'pie',\n              label: {\n                show: false\n              },\n              emphasis: {\n                label: {\n                  show: true\n                },\n                labelLine: {\n                  show: false\n                }\n              }\n            }\n          ]\n        }\n        this.chartInstance.setOption(initOption)\n      },\n      async getData () {\n        // 获取服务器的数据, 对this.allData进行赋值之后, 调用updateChart方法更新图表\n        const { data: ret } = await this.$http.get('hotproduct')\n        this.allData = ret\n        console.log(this.allData)\n        this.updateChart()\n      },\n      updateChart () {\n        // 处理图表需要的数据\n        const legendData = this.allData[this.currentIndex].children.map(item => {\n          return item.name\n        })\n        const seriesData = this.allData[this.currentIndex].children.map(item => {\n          return {\n            name: item.name,\n            value: item.value,\n            children: item.children // 新增加children的原因是为了在tooltip中的formatter的回调函数中,来拿到这个二级分类下的三级分类数据\n          }\n        })\n        const dataOption = {\n          legend: {\n            data: legendData\n          },\n          series: [\n            {\n              data: seriesData\n            }\n          ]\n        }\n        this.chartInstance.setOption(dataOption)\n      },\n      screenAdapter () {\n        this.titleFontSize = this.$refs.hot_ref.offsetWidth / 100 * 3.6\n        const adapterOption = {\n          title: {\n            textStyle: {\n              fontSize: this.titleFontSize\n            }\n          },\n          legend: {\n            itemWidth: this.titleFontSize,\n            itemHeight: this.titleFontSize,\n            itemGap: this.titleFontSize / 2,\n            textStyle: {\n              fontSize: this.titleFontSize / 2\n            }\n          },\n          series: [\n            {\n              radius: this.titleFontSize * 4.5,\n              center: ['50%', '60%']\n            }\n          ]\n        }\n        this.chartInstance.setOption(adapterOption)\n        this.chartInstance.resize()\n      },\n      toLeft () {\n        this.currentIndex--\n        if (this.currentIndex < 0) {\n          this.currentIndex = this.allData.length - 1\n        }\n        this.updateChart()\n      },\n      toRight () {\n        this.currentIndex++\n        if (this.currentIndex > this.allData.length - 1) {\n          this.currentIndex = 0\n        }\n        this.updateChart()\n      }\n    },\n    watch: {\n      theme () {\n        console.log('主题切换了')\n        this.chartInstance.dispose() // 销毁当前的图表\n        this.initChart() // 重新以最新的主题名称初始化图表对象\n        this.screenAdapter() // 完成屏幕的适配\n        this.updateChart() // 更新图表的展示\n      }\n    }\n  }\n</script>\n\n<style lang='less' scoped>\n  .arr-left {\n    position:absolute;\n    left: 10%;\n    top: 50%;\n    transform: translateY(-50%);\n    cursor: pointer;\n    color: white;\n  }\n  .arr-right {\n    position:absolute;\n    right: 10%;\n    top: 50%;\n    transform: translateY(-50%);\n    cursor: pointer;\n    color: white;\n  }\n  .cat-name {\n    position:absolute;\n    left: 80%;\n    bottom: 20px;\n    color: white;\n  }\n</style>\n"]}]}