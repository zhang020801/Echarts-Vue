{"remainingRequest":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\src\\components\\Seller.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\src\\components\\Seller.vue","mtime":1614924310836},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCcKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgY2hhcnRJbnN0YW5jZTogbnVsbCwKICAgICAgYWxsRGF0YTogbnVsbCwgLy8g5pyN5Yqh5Zmo6L+U5Zue55qE5pWw5o2uCiAgICAgIGN1cnJlbnRQYWdlOiAxLCAvLyDlvZPliY3mmL7npLrnmoTpobXmlbAKICAgICAgdG90YWxQYWdlOiAwLCAvLyDkuIDlhbHmnInlpJrlsJHpobUKICAgICAgdGltZXJJZDogbnVsbCAvLyDlrprml7blmajnmoTmoIfor4YKICAgIH0KICB9LAogIGNyZWF0ZWQgKCkgewogICAgLy8g5Zyo57uE5Lu25Yib5bu65a6M5oiQ5LmL5ZCOIOi/m+ihjOWbnuiwg+WHveaVsOeahOazqOWGjAogICAgdGhpcy4kc29ja2V0LnJlZ2lzdGVyQ2FsbEJhY2soJ3NlbGxlckRhdGEnLCB0aGlzLmdldERhdGEpCiAgfSwKICBtb3VudGVkICgpIHsKICAgIHRoaXMuaW5pdENoYXJ0KCkKICAgIC8vIHRoaXMuZ2V0RGF0YSgpCiAgICB0aGlzLiRzb2NrZXQuc2VuZCh7CiAgICAgIGFjdGlvbjogJ2dldERhdGEnLAogICAgICBzb2NrZXRUeXBlOiAnc2VsbGVyRGF0YScsCiAgICAgIGNoYXJ0TmFtZTogJ3NlbGxlcicsCiAgICAgIHZhbHVlOiAnJwogICAgfSkKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnNjcmVlbkFkYXB0ZXIpCiAgICAvLyDlnKjpobXpnaLliqDovb3lrozmiJDnmoTml7blgJksIOS4u+WKqOi/m+ihjOWxj+W5leeahOmAgumFjQogICAgdGhpcy5zY3JlZW5BZGFwdGVyKCkKICB9LAogIGRlc3Ryb3llZCAoKSB7CiAgICBjbGVhckludGVydmFsKHRoaXMudGltZXJJZCkKICAgIC8vIOWcqOe7hOS7tumUgOavgeeahOaXtuWAmSwg6ZyA6KaB5bCG55uR5ZCs5Zmo5Y+W5raI5o6JCiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5zY3JlZW5BZGFwdGVyKQogICAgdGhpcy4kc29ja2V0LnVuUmVnaXN0ZXJDYWxsQmFjaygnc2VsbGVyRGF0YScpCiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDliJ3lp4vljJZlY2hhcnRJbnN0YW5jZeWvueixoQogICAgaW5pdENoYXJ0ICgpIHsKICAgICAgdGhpcy5jaGFydEluc3RhbmNlID0gdGhpcy4kZWNoYXJ0cy5pbml0KHRoaXMuJHJlZnMuc2VsbGVyX3JlZiwgdGhpcy50aGVtZSkKICAgICAgLy8g5a+55Zu+6KGo5Yid5aeL5YyW6YWN572u55qE5o6n5Yi2CiAgICAgIGNvbnN0IGluaXRPcHRpb24gPSB7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICfwn5KbIOWVhuWutumUgOWUrue7n+iuoScsCiAgICAgICAgICBsZWZ0OiAyMCwKICAgICAgICAgIHRvcDogMjAKICAgICAgICB9LAogICAgICAgIGdyaWQ6IHsKICAgICAgICAgIHRvcDogJzIwJScsCiAgICAgICAgICBsZWZ0OiAnMyUnLAogICAgICAgICAgcmlnaHQ6ICc2JScsCiAgICAgICAgICBib3R0b206ICczJScsCiAgICAgICAgICBjb250YWluTGFiZWw6IHRydWUgLy8g6Led56a75piv5YyF5ZCr5Z2Q5qCH6L205LiK55qE5paH5a2XCiAgICAgICAgfSwKICAgICAgICB4QXhpczogewogICAgICAgICAgdHlwZTogJ3ZhbHVlJwogICAgICAgIH0sCiAgICAgICAgeUF4aXM6IHsKICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScKICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHRyaWdnZXI6ICdheGlzJywKICAgICAgICAgIGF4aXNQb2ludGVyOiB7CiAgICAgICAgICAgIHR5cGU6ICdsaW5lJywKICAgICAgICAgICAgejogMCwKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjMkQzNDQzJwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgdHlwZTogJ2JhcicsCiAgICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgICAgICBwb3NpdGlvbjogJ3JpZ2h0JywKICAgICAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgICAgIGNvbG9yOiAnd2hpdGUnCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgICAvLyDmjIfmmI7popzoibLmuJDlj5jnmoTmlrnlkJEKICAgICAgICAgICAgICAvLyDmjIfmmI7kuI3lkIznmb7liIbmr5TkuYvkuIvpopzoibLnmoTlgLwKICAgICAgICAgICAgICBjb2xvcjogbmV3IHRoaXMuJGVjaGFydHMuZ3JhcGhpYy5MaW5lYXJHcmFkaWVudCgwLCAwLCAxLCAwLCBbCiAgICAgICAgICAgICAgICAvLyDnmb7liIbkuYsw54q25oCB5LmL5LiL55qE6aKc6Imy5YC8CiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIG9mZnNldDogMCwKICAgICAgICAgICAgICAgICAgY29sb3I6ICcjNTA1MkVFJwogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIC8vIOeZvuWIhuS5izEwMOeKtuaAgeS5i+S4i+eahOminOiJsuWAvAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBvZmZzZXQ6IDEsCiAgICAgICAgICAgICAgICAgIGNvbG9yOiAnI0FCNkVFNScKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBdKQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9CiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5zZXRPcHRpb24oaW5pdE9wdGlvbikKICAgICAgLy8g5a+55Zu+6KGo5a+56LGh6L+b6KGM6byg5qCH5LqL5Lu255qE55uR5ZCsCiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5vbignbW91c2VvdmVyJywgKCkgPT4gewogICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lcklkKQogICAgICB9KQogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uub24oJ21vdXNlb3V0JywgKCkgPT4gewogICAgICAgIHRoaXMuc3RhcnRJbnRlcnZhbCgpCiAgICAgIH0pCiAgICB9LAogICAgLy8g6I635Y+W5pyN5Yqh5Zmo55qE5pWw5o2uCiAgICBnZXREYXRhIChyZXQpIHsKICAgICAgLy8gaHR0cDovLzEyNy4wLjAuMTo4ODg4L2FwaS9zZWxsZXIKICAgICAgLy8gY29uc3QgeyBkYXRhOiByZXQgfSA9IGF3YWl0IHRoaXMuJGh0dHAuZ2V0KCdzZWxsZXInKQogICAgICB0aGlzLmFsbERhdGEgPSByZXQKICAgICAgLy8g5a+55pWw5o2u5o6S5bqPCiAgICAgIHRoaXMuYWxsRGF0YS5zb3J0KChhLCBiKSA9PiB7CiAgICAgICAgcmV0dXJuIGEudmFsdWUgLSBiLnZhbHVlIC8vIOS7juWwj+WIsOWkp+eahOaOkuW6jwogICAgICB9KQogICAgICAvLyDmr4815Liq5YWD57Sg5pi+56S65LiA6aG1CiAgICAgIHRoaXMudG90YWxQYWdlID0gdGhpcy5hbGxEYXRhLmxlbmd0aCAlIDUgPT09IDAgPyB0aGlzLmFsbERhdGEubGVuZ3RoIC8gNSA6IHRoaXMuYWxsRGF0YS5sZW5ndGggLyA1ICsgMQogICAgICB0aGlzLnVwZGF0ZUNoYXJ0KCkKICAgICAgLy8g5ZCv5Yqo5a6a5pe25ZmoCiAgICAgIHRoaXMuc3RhcnRJbnRlcnZhbCgpCiAgICB9LAogICAgLy8g5pu05paw5Zu+6KGoCiAgICB1cGRhdGVDaGFydCAoKSB7CiAgICAgIGNvbnN0IHN0YXJ0ID0gKHRoaXMuY3VycmVudFBhZ2UgLSAxKSAqIDUKICAgICAgY29uc3QgZW5kID0gdGhpcy5jdXJyZW50UGFnZSAqIDUKICAgICAgY29uc3Qgc2hvd0RhdGEgPSB0aGlzLmFsbERhdGEuc2xpY2Uoc3RhcnQsIGVuZCkKICAgICAgY29uc3Qgc2VsbGVyTmFtZXMgPSBzaG93RGF0YS5tYXAoKGl0ZW0pID0+IHsKICAgICAgICByZXR1cm4gaXRlbS5uYW1lCiAgICAgIH0pCiAgICAgIGNvbnN0IHNlbGxlclZhbHVlcyA9IHNob3dEYXRhLm1hcCgoaXRlbSkgPT4gewogICAgICAgIHJldHVybiBpdGVtLnZhbHVlCiAgICAgIH0pCiAgICAgIGNvbnN0IGRhdGFPcHRpb24gPSB7CiAgICAgICAgeUF4aXM6IHsKICAgICAgICAgIGRhdGE6IHNlbGxlck5hbWVzCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgZGF0YTogc2VsbGVyVmFsdWVzCiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9CiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5zZXRPcHRpb24oZGF0YU9wdGlvbikKICAgIH0sCiAgICBzdGFydEludGVydmFsICgpIHsKICAgICAgaWYgKHRoaXMudGltZXJJZCkgewogICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lcklkKQogICAgICB9CiAgICAgIHRoaXMudGltZXJJZCA9IHNldEludGVydmFsKCgpID0+IHsKICAgICAgICB0aGlzLmN1cnJlbnRQYWdlKysKICAgICAgICBpZiAodGhpcy5jdXJyZW50UGFnZSA+IHRoaXMudG90YWxQYWdlKSB7CiAgICAgICAgICB0aGlzLmN1cnJlbnRQYWdlID0gMQogICAgICAgIH0KICAgICAgICB0aGlzLnVwZGF0ZUNoYXJ0KCkKICAgICAgfSwgMzAwMCkKICAgIH0sCiAgICAvLyDlvZPmtY/op4jlmajnmoTlpKflsI/lj5HnlJ/lj5jljJbnmoTml7blgJksIOS8muiwg+eUqOeahOaWueazlSwg5p2l5a6M5oiQ5bGP5bmV55qE6YCC6YWNCiAgICBzY3JlZW5BZGFwdGVyICgpIHsKICAgICAgLy8gY29uc29sZS5sb2codGhpcy4kcmVmcy5zZWxsZXJfcmVmLm9mZnNldFdpZHRoKQogICAgICBjb25zdCB0aXRsZUZvbnRTaXplID0gdGhpcy4kcmVmcy5zZWxsZXJfcmVmLm9mZnNldFdpZHRoIC8gMTAwICogMy42CiAgICAgIC8vIOWSjOWIhui+qOeOh+Wkp+Wwj+ebuOWFs+eahOmFjee9rumhuQogICAgICBjb25zdCBhZGFwdGVyT3B0aW9uID0gewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgZm9udFNpemU6IHRpdGxlRm9udFNpemUKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIGF4aXNQb2ludGVyOiB7CiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIHdpZHRoOiB0aXRsZUZvbnRTaXplCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHNlcmllczogWwogICAgICAgICAgewogICAgICAgICAgICBiYXJXaWR0aDogdGl0bGVGb250U2l6ZSwKICAgICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgICAgYmFyQm9yZGVyUmFkaXVzOiBbMCwgdGl0bGVGb250U2l6ZSAvIDIsIHRpdGxlRm9udFNpemUgLyAyLCAwXQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9CiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5zZXRPcHRpb24oYWRhcHRlck9wdGlvbikKICAgICAgLy8g5omL5Yqo55qE6LCD55So5Zu+6KGo5a+56LGh55qEcmVzaXplIOaJjeiDveS6p+eUn+aViOaenAogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2UucmVzaXplKCkKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBTdGF0ZShbJ3RoZW1lJ10pCiAgfSwKICB3YXRjaDogewogICAgdGhlbWUgKCkgewogICAgICBjb25zb2xlLmxvZygn5Li76aKY5YiH5o2i5LqGJykKICAgICAgdGhpcy5jaGFydEluc3RhbmNlLmRpc3Bvc2UoKSAvLyDplIDmr4HlvZPliY3nmoTlm77ooagKICAgICAgdGhpcy5pbml0Q2hhcnQoKSAvLyDph43mlrDku6XmnIDmlrDnmoTkuLvpopjlkI3np7DliJ3lp4vljJblm77ooajlr7nosaEKICAgICAgdGhpcy5zY3JlZW5BZGFwdGVyKCkgLy8g5a6M5oiQ5bGP5bmV55qE6YCC6YWNCiAgICAgIHRoaXMudXBkYXRlQ2hhcnQoKSAvLyDmm7TmlrDlm77ooajnmoTlsZXnpLoKICAgIH0KICB9Cn0K"},{"version":3,"sources":["Seller.vue"],"names":[],"mappingsfile":"Seller.vue","sourceRoot":"src/components","sourcesContent":["<!-- 商家销量统计的横向柱状图 -->\n<template>\n  <div class=\"com-container\">\n    <div class=\"com-chart\" ref=\"seller_ref\"></div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nexport default {\n  data () {\n    return {\n      chartInstance: null,\n      allData: null, // 服务器返回的数据\n      currentPage: 1, // 当前显示的页数\n      totalPage: 0, // 一共有多少页\n      timerId: null // 定时器的标识\n    }\n  },\n  created () {\n    // 在组件创建完成之后 进行回调函数的注册\n    this.$socket.registerCallBack('sellerData', this.getData)\n  },\n  mounted () {\n    this.initChart()\n    // this.getData()\n    this.$socket.send({\n      action: 'getData',\n      socketType: 'sellerData',\n      chartName: 'seller',\n      value: ''\n    })\n    window.addEventListener('resize', this.screenAdapter)\n    // 在页面加载完成的时候, 主动进行屏幕的适配\n    this.screenAdapter()\n  },\n  destroyed () {\n    clearInterval(this.timerId)\n    // 在组件销毁的时候, 需要将监听器取消掉\n    window.removeEventListener('resize', this.screenAdapter)\n    this.$socket.unRegisterCallBack('sellerData')\n  },\n  methods: {\n    // 初始化echartInstance对象\n    initChart () {\n      this.chartInstance = this.$echarts.init(this.$refs.seller_ref, this.theme)\n      // 对图表初始化配置的控制\n      const initOption = {\n        title: {\n          text: '💛 商家销售统计',\n          left: 20,\n          top: 20\n        },\n        grid: {\n          top: '20%',\n          left: '3%',\n          right: '6%',\n          bottom: '3%',\n          containLabel: true // 距离是包含坐标轴上的文字\n        },\n        xAxis: {\n          type: 'value'\n        },\n        yAxis: {\n          type: 'category'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'line',\n            z: 0,\n            lineStyle: {\n              color: '#2D3443'\n            }\n          }\n        },\n        series: [\n          {\n            type: 'bar',\n            label: {\n              show: true,\n              position: 'right',\n              textStyle: {\n                color: 'white'\n              }\n            },\n            itemStyle: {\n              // 指明颜色渐变的方向\n              // 指明不同百分比之下颜色的值\n              color: new this.$echarts.graphic.LinearGradient(0, 0, 1, 0, [\n                // 百分之0状态之下的颜色值\n                {\n                  offset: 0,\n                  color: '#5052EE'\n                },\n                // 百分之100状态之下的颜色值\n                {\n                  offset: 1,\n                  color: '#AB6EE5'\n                }\n              ])\n            }\n          }\n        ]\n      }\n      this.chartInstance.setOption(initOption)\n      // 对图表对象进行鼠标事件的监听\n      this.chartInstance.on('mouseover', () => {\n        clearInterval(this.timerId)\n      })\n      this.chartInstance.on('mouseout', () => {\n        this.startInterval()\n      })\n    },\n    // 获取服务器的数据\n    getData (ret) {\n      // http://127.0.0.1:8888/api/seller\n      // const { data: ret } = await this.$http.get('seller')\n      this.allData = ret\n      // 对数据排序\n      this.allData.sort((a, b) => {\n        return a.value - b.value // 从小到大的排序\n      })\n      // 每5个元素显示一页\n      this.totalPage = this.allData.length % 5 === 0 ? this.allData.length / 5 : this.allData.length / 5 + 1\n      this.updateChart()\n      // 启动定时器\n      this.startInterval()\n    },\n    // 更新图表\n    updateChart () {\n      const start = (this.currentPage - 1) * 5\n      const end = this.currentPage * 5\n      const showData = this.allData.slice(start, end)\n      const sellerNames = showData.map((item) => {\n        return item.name\n      })\n      const sellerValues = showData.map((item) => {\n        return item.value\n      })\n      const dataOption = {\n        yAxis: {\n          data: sellerNames\n        },\n        series: [\n          {\n            data: sellerValues\n          }\n        ]\n      }\n      this.chartInstance.setOption(dataOption)\n    },\n    startInterval () {\n      if (this.timerId) {\n        clearInterval(this.timerId)\n      }\n      this.timerId = setInterval(() => {\n        this.currentPage++\n        if (this.currentPage > this.totalPage) {\n          this.currentPage = 1\n        }\n        this.updateChart()\n      }, 3000)\n    },\n    // 当浏览器的大小发生变化的时候, 会调用的方法, 来完成屏幕的适配\n    screenAdapter () {\n      // console.log(this.$refs.seller_ref.offsetWidth)\n      const titleFontSize = this.$refs.seller_ref.offsetWidth / 100 * 3.6\n      // 和分辨率大小相关的配置项\n      const adapterOption = {\n        title: {\n          textStyle: {\n            fontSize: titleFontSize\n          }\n        },\n        tooltip: {\n          axisPointer: {\n            lineStyle: {\n              width: titleFontSize\n            }\n          }\n        },\n        series: [\n          {\n            barWidth: titleFontSize,\n            itemStyle: {\n              barBorderRadius: [0, titleFontSize / 2, titleFontSize / 2, 0]\n            }\n          }\n        ]\n      }\n      this.chartInstance.setOption(adapterOption)\n      // 手动的调用图表对象的resize 才能产生效果\n      this.chartInstance.resize()\n    }\n  },\n  computed: {\n    ...mapState(['theme'])\n  },\n  watch: {\n    theme () {\n      console.log('主题切换了')\n      this.chartInstance.dispose() // 销毁当前的图表\n      this.initChart() // 重新以最新的主题名称初始化图表对象\n      this.screenAdapter() // 完成屏幕的适配\n      this.updateChart() // 更新图表的展示\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n</style>\n"]}]}