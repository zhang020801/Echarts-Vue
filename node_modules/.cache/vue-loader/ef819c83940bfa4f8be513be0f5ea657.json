{"remainingRequest":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\src\\components\\Trend.vue?vue&type=style&index=0&id=0041d71d&scoped=true&lang=css&","dependencies":[{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\src\\components\\Trend.vue","mtime":1614770010087},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Webstorm_program\\Echarts-Vue\\Day03\\Echarts-Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi50aXRsZXsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgbGVmdDogMjBweDsKICAKfQo="},{"version":3,"sources":["Trend.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqIA;AACA;AACA;;AAEA","file":"Trend.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"com-container\">\r\n    <div class=\"title\">\r\n      <span>我是标题</span>\r\n      <span>-></span>\r\n      <div class=\"select-con\">\r\n        <div class=\"select-item\">我是选择标题1</div>\r\n        <div class=\"select-item\">我是选择标题2</div>\r\n        <div class=\"select-item\">我是选择标题3</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"com-chart\" ref=\"trend_ref\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: \"Trend\",\r\n    data(){\r\n      return{\r\n        chartInstance: null,\r\n        allData: null\r\n      }\r\n    },\r\n    mounted() {\r\n      this.initChart()\r\n      this.getData()\r\n      window.addEventListener('resize',this.screenAdapter)\r\n      this.screenAdapter()\r\n    },\r\n    destroyed() {\r\n      window.removeEventListener('resize',this.screenAdapter)\r\n    },\r\n    methods:{\r\n      initChart(){\r\n        this.chartInstance = this.$echarts.init(this.$refs.trend_ref,'chalk')\r\n        const initOption = {\r\n          grid:{\r\n            left: '3%',\r\n            top: '35%',\r\n            right: '4%',\r\n            bottom: '1%',\r\n            containLabel: true\r\n          },\r\n          tooltip:{\r\n            trigger: 'axis'\r\n          },\r\n          legend:{\r\n            left: 20,\r\n            top: '15%',\r\n            icon: 'circle'\r\n          },\r\n          xAxis:{\r\n            type: 'category',\r\n            boundaryGap: false\r\n          },\r\n          yAxis:{\r\n            type: 'value'\r\n          }\r\n        }\r\n        this.chartInstance.setOption(initOption)\r\n      },\r\n      async getData(){\r\n        // await his.$http.get()\r\n        const {data: ret } = await this.$http.get('trend',)\r\n        this.allData = ret\r\n\r\n        this.updateChart()\r\n      },\r\n      updateChart(){\r\n        const colorArr1 = [\r\n          'rgba(11,168,44,0.5)',\r\n          'rgba(44,110,255,0.5)',\r\n          'rgba(22,242,217,0.5)',\r\n          'rgba(254,33,30,0.5)',\r\n          'rgba(250,105,0,0.5)',\r\n        ]\r\n        const colorArr2 = [\r\n          'rgba(11,168,44,0)',\r\n          'rgba(44,110,255,0)',\r\n          'rgba(22,242,217,0)',\r\n          'rgba(254,33,30,0)',\r\n          'rgba(250,105,0,0)',\r\n        ]\r\n        // x轴 类目轴的数据\r\n        const timeArr = this.allData.common.month\r\n        // y轴数据\r\n        const valueArr = this.allData.map.data\r\n        const seriesArr = valueArr.map((item,index) => {\r\n          return{\r\n            name: item.name,\r\n            type: 'line',\r\n            data: item.data,\r\n            stack: 'map',\r\n            areaStyle: {\r\n              color: new this.$echarts.graphic.LinearGradient(0,0,0,1,[\r\n                {\r\n                  offset: 0,\r\n                  color:colorArr1[index]\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: colorArr2[index]\r\n                }\r\n              ])\r\n            }\r\n          }\r\n        })\r\n        const legendArr = valueArr.map(item => {\r\n          return item.name\r\n        })\r\n        const dataOption = {\r\n          xAxis:{\r\n            data: timeArr\r\n          },\r\n          legend:{\r\n            data: legendArr\r\n          },\r\n          series: seriesArr\r\n        }\r\n\r\n        this.chartInstance.setOption(dataOption)\r\n      },\r\n      screenAdapter(){\r\n        const adapterOption = {}\r\n        this.chartInstance.setOption(adapterOption)\r\n        this.chartInstance.resize()\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .title{\r\n    position: absolute;\r\n    left: 20px;\r\n    \r\n  }\r\n</style>\r\n"]}]}